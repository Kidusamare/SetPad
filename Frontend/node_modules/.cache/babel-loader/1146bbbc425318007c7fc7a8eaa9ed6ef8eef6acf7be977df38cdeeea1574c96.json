{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useEffect } from 'react';\n\n/**\n * Custom hook for handling keyboard shortcuts\n * @param {Object} shortcuts - Object mapping key combinations to functions\n * @param {boolean} enabled - Whether shortcuts are enabled (default: true)\n * \n * Example usage:\n * useKeyboardShortcuts({\n *   'ctrl+s': () => save(),\n *   'ctrl+shift+n': () => addNew(),\n *   'escape': () => cancel(),\n *   'enter': () => submit()\n * });\n */\nexport const useKeyboardShortcuts = (shortcuts, enabled = true) => {\n  _s();\n  useEffect(() => {\n    if (!enabled) return;\n    const handleKeyDown = event => {\n      // Build key combination string\n      const keys = [];\n      if (event.ctrlKey || event.metaKey) keys.push('ctrl');\n      if (event.shiftKey) keys.push('shift');\n      if (event.altKey) keys.push('alt');\n\n      // Add the main key\n      const key = event.key.toLowerCase();\n      if (!['control', 'shift', 'alt', 'meta'].includes(key)) {\n        keys.push(key);\n      }\n      const combination = keys.join('+');\n\n      // Execute matching shortcut\n      if (shortcuts[combination]) {\n        event.preventDefault();\n        event.stopPropagation();\n        shortcuts[combination](event);\n      }\n    };\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [shortcuts, enabled]);\n};\n\n/**\n * Hook specifically for form navigation shortcuts\n * @param {Object} options - Configuration options\n */\n_s(useKeyboardShortcuts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport const useFormKeyboardNavigation = ({\n  onSave,\n  onAddRow,\n  onDeleteRow,\n  onEscape,\n  enabled = true\n} = {}) => {\n  _s2();\n  const shortcuts = {};\n  if (onSave) shortcuts['ctrl+s'] = onSave;\n  if (onAddRow) shortcuts['ctrl+enter'] = onAddRow;\n  if (onDeleteRow) shortcuts['ctrl+backspace'] = onDeleteRow;\n  if (onEscape) shortcuts['escape'] = onEscape;\n  useKeyboardShortcuts(shortcuts, enabled);\n};\n\n/**\n * Hook for enhancing tab navigation in forms\n * @param {string} containerSelector - CSS selector for the form container\n * @param {boolean} enabled - Whether enhanced navigation is enabled\n */\n_s2(useFormKeyboardNavigation, \"kYp0osVtkHT0IOo6qyNGP0vsJXI=\", false, function () {\n  return [useKeyboardShortcuts];\n});\nexport const useEnhancedTabNavigation = (containerSelector = '[data-form-container]', enabled = true) => {\n  _s3();\n  useEffect(() => {\n    if (!enabled) return;\n    const container = document.querySelector(containerSelector);\n    if (!container) return;\n    const handleKeyDown = event => {\n      if (event.key === 'Tab') {\n        const focusableElements = container.querySelectorAll('input:not([disabled]), textarea:not([disabled]), button:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex=\"-1\"])');\n        const focusedIndex = Array.from(focusableElements).indexOf(document.activeElement);\n        if (event.shiftKey) {\n          // Shift+Tab - go backwards\n          if (focusedIndex <= 0) {\n            var _focusableElements;\n            event.preventDefault();\n            (_focusableElements = focusableElements[focusableElements.length - 1]) === null || _focusableElements === void 0 ? void 0 : _focusableElements.focus();\n          }\n        } else {\n          // Tab - go forwards\n          if (focusedIndex >= focusableElements.length - 1) {\n            var _focusableElements$;\n            event.preventDefault();\n            (_focusableElements$ = focusableElements[0]) === null || _focusableElements$ === void 0 ? void 0 : _focusableElements$.focus();\n          }\n        }\n      }\n    };\n    container.addEventListener('keydown', handleKeyDown);\n    return () => {\n      container.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [containerSelector, enabled]);\n};\n_s3(useEnhancedTabNavigation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useKeyboardShortcuts","shortcuts","enabled","_s","handleKeyDown","event","keys","ctrlKey","metaKey","push","shiftKey","altKey","key","toLowerCase","includes","combination","join","preventDefault","stopPropagation","document","addEventListener","removeEventListener","useFormKeyboardNavigation","onSave","onAddRow","onDeleteRow","onEscape","_s2","useEnhancedTabNavigation","containerSelector","_s3","container","querySelector","focusableElements","querySelectorAll","focusedIndex","Array","from","indexOf","activeElement","_focusableElements","length","focus","_focusableElements$"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/hooks/useKeyboardShortcuts.js"],"sourcesContent":["import { useEffect } from 'react';\n\n/**\n * Custom hook for handling keyboard shortcuts\n * @param {Object} shortcuts - Object mapping key combinations to functions\n * @param {boolean} enabled - Whether shortcuts are enabled (default: true)\n * \n * Example usage:\n * useKeyboardShortcuts({\n *   'ctrl+s': () => save(),\n *   'ctrl+shift+n': () => addNew(),\n *   'escape': () => cancel(),\n *   'enter': () => submit()\n * });\n */\nexport const useKeyboardShortcuts = (shortcuts, enabled = true) => {\n    useEffect(() => {\n        if (!enabled) return;\n\n        const handleKeyDown = (event) => {\n            // Build key combination string\n            const keys = [];\n            \n            if (event.ctrlKey || event.metaKey) keys.push('ctrl');\n            if (event.shiftKey) keys.push('shift');\n            if (event.altKey) keys.push('alt');\n            \n            // Add the main key\n            const key = event.key.toLowerCase();\n            if (!['control', 'shift', 'alt', 'meta'].includes(key)) {\n                keys.push(key);\n            }\n            \n            const combination = keys.join('+');\n            \n            // Execute matching shortcut\n            if (shortcuts[combination]) {\n                event.preventDefault();\n                event.stopPropagation();\n                shortcuts[combination](event);\n            }\n        };\n\n        document.addEventListener('keydown', handleKeyDown);\n        \n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [shortcuts, enabled]);\n};\n\n/**\n * Hook specifically for form navigation shortcuts\n * @param {Object} options - Configuration options\n */\nexport const useFormKeyboardNavigation = ({\n    onSave,\n    onAddRow,\n    onDeleteRow,\n    onEscape,\n    enabled = true\n} = {}) => {\n    const shortcuts = {};\n    \n    if (onSave) shortcuts['ctrl+s'] = onSave;\n    if (onAddRow) shortcuts['ctrl+enter'] = onAddRow;\n    if (onDeleteRow) shortcuts['ctrl+backspace'] = onDeleteRow;\n    if (onEscape) shortcuts['escape'] = onEscape;\n    \n    useKeyboardShortcuts(shortcuts, enabled);\n};\n\n/**\n * Hook for enhancing tab navigation in forms\n * @param {string} containerSelector - CSS selector for the form container\n * @param {boolean} enabled - Whether enhanced navigation is enabled\n */\nexport const useEnhancedTabNavigation = (containerSelector = '[data-form-container]', enabled = true) => {\n    useEffect(() => {\n        if (!enabled) return;\n\n        const container = document.querySelector(containerSelector);\n        if (!container) return;\n\n        const handleKeyDown = (event) => {\n            if (event.key === 'Tab') {\n                const focusableElements = container.querySelectorAll(\n                    'input:not([disabled]), textarea:not([disabled]), button:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex=\"-1\"])'\n                );\n                \n                const focusedIndex = Array.from(focusableElements).indexOf(document.activeElement);\n                \n                if (event.shiftKey) {\n                    // Shift+Tab - go backwards\n                    if (focusedIndex <= 0) {\n                        event.preventDefault();\n                        focusableElements[focusableElements.length - 1]?.focus();\n                    }\n                } else {\n                    // Tab - go forwards\n                    if (focusedIndex >= focusableElements.length - 1) {\n                        event.preventDefault();\n                        focusableElements[0]?.focus();\n                    }\n                }\n            }\n        };\n\n        container.addEventListener('keydown', handleKeyDown);\n        \n        return () => {\n            container.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [containerSelector, enabled]);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}