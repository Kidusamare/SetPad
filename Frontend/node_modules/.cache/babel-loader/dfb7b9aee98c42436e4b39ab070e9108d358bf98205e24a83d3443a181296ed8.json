{"ast":null,"code":"import _objectSpread from\"C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{useTheme}from\"../context/ThemeContext\";import TrainingLogManager from\"./TrainingLogManager\";import TrainingLogRow from\"./TrainingLogRow\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const manager=new TrainingLogManager();export default function TrainingLogTable(){const{id}=useParams();const navigate=useNavigate();const{theme}=useTheme();const[log,setLog]=useState(null);const[muscleGroupSuggestions,setMuscleGroupSuggestions]=useState([]);const[exerciseSuggestions,setExerciseSuggestions]=useState([]);const[currentMuscleGroup,setCurrentMuscleGroup]=useState(\"\");const[showBackButton,setShowBackButton]=useState(true);const[lastScrollY,setLastScrollY]=useState(0);useEffect(()=>{const handleScroll=()=>{const currentScrollY=window.scrollY;// Show button if at top of page or scrolling up\nconst isAtTop=currentScrollY<50;const isScrollingUp=currentScrollY<lastScrollY;setShowBackButton(isAtTop||isScrollingUp);setLastScrollY(currentScrollY);};window.addEventListener('scroll',handleScroll,{passive:true});return()=>window.removeEventListener('scroll',handleScroll);},[lastScrollY]);useEffect(()=>{const loadLog=async()=>{const saved=await manager.loadTable(id);if(saved){setLog(saved);}else{const today=new Date().toISOString().split(\"T\")[0];const defaultRow={id:0,muscleGroup:\"\",exercise:\"\",sets:[{reps:\"\",weight:\"\"},{reps:\"\",weight:\"\"}],notes:\"\",showNotes:false,weightUnit:\"lbs\"};const defaultLog={id:id,tableName:\"New Log\",date:today,rows:[defaultRow]};setLog(defaultLog);}};loadLog();},[id]);// Fetch suggestions when component mounts\nuseEffect(()=>{const fetchSuggestions=async()=>{try{const[muscleGroups,exercises]=await Promise.all([manager.getUniqueMuscleGroups(),manager.getUniqueExercises()]);setMuscleGroupSuggestions(muscleGroups);setExerciseSuggestions(exercises);}catch(error){console.error(\"Error fetching suggestions:\",error);}};fetchSuggestions();},[]);// Update exercise suggestions when muscle group changes\nuseEffect(()=>{const fetchExercisesForMuscleGroup=async()=>{if(currentMuscleGroup.trim()){try{const exercises=await manager.getExercisesForMuscleGroup(currentMuscleGroup);setExerciseSuggestions(exercises);}catch(error){console.error(\"Error fetching exercises for muscle group:\",error);}}else{// If no muscle group selected, show all exercises\ntry{const allExercises=await manager.getUniqueExercises();setExerciseSuggestions(allExercises);}catch(error){console.error(\"Error fetching all exercises:\",error);}}};fetchExercisesForMuscleGroup();},[currentMuscleGroup]);const updateRow=(index,updatedRow)=>{setLog(prevLog=>{const newRows=[...prevLog.rows];newRows[index]=_objectSpread(_objectSpread({},newRows[index]),updatedRow);return _objectSpread(_objectSpread({},prevLog),{},{rows:newRows});});};const addRow=()=>{setLog(prevLog=>{const newRow={id:prevLog.rows.length,muscleGroup:\"\",exercise:\"\",sets:[{reps:\"\",weight:\"\"}],notes:\"\",showNotes:false,weightUnit:\"lbs\"};return _objectSpread(_objectSpread({},prevLog),{},{rows:[...prevLog.rows,newRow]});});};const deleteLastRow=()=>{setLog(prevLog=>{if(prevLog.rows.length<=1)return prevLog;const newRows=prevLog.rows.slice(0,-1);return _objectSpread(_objectSpread({},prevLog),{},{rows:newRows});});};const handleRename=e=>{setLog(prevLog=>_objectSpread(_objectSpread({},prevLog),{},{tableName:e.target.value}));};const handleMuscleGroupChange=muscleGroup=>{setCurrentMuscleGroup(muscleGroup);};// Temporarily disable auto-save to fix infinite loop\n// TODO: Re-implement auto-save with proper state management\nconst saveManually=()=>{if(log){manager.saveTable(log);}};if(!log)return/*#__PURE__*/_jsx(\"div\",{style:{background:theme.background,minHeight:\"100vh\"}});return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"2rem\",paddingTop:\"5rem\",// Add top padding to prevent overlap with back button\ncolor:theme.text,background:theme.background,minHeight:\"100vh\",position:\"relative\",transition:\"background-color 0.3s ease, color 0.3s ease\"},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{console.log(\"Navigating back from table \".concat(id,\" to /log\"));try{navigate(\"/log\",{replace:true});// Force navigation if it doesn't work\nsetTimeout(()=>{if(window.location.pathname.includes('/log/')){console.log(\"Force redirecting to /log\");window.location.href='/log';}},100);}catch(error){console.error(\"Navigation error:\",error);window.location.href='/log';}},style:{position:\"fixed\",top:\"1rem\",left:\"1rem\",background:theme.accentSecondary,color:theme.accent,padding:\"0.7rem 1.4rem\",border:\"none\",borderRadius:\"10px\",fontWeight:\"600\",fontSize:\"1rem\",cursor:\"pointer\",zIndex:1000,transition:\"all 0.3s ease\",opacity:showBackButton?1:0,transform:showBackButton?\"translateY(0)\":\"translateY(-10px)\",pointerEvents:showBackButton?\"auto\":\"none\"},onMouseOver:e=>e.currentTarget.style.background=theme.accentHover,onMouseOut:e=>e.currentTarget.style.background=theme.accentSecondary,children:[\"\\u2190 Back to Saved Logs (ID: \",id,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"2rem\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:log.tableName,onChange:handleRename,style:{fontSize:\"2rem\",fontWeight:\"bold\",background:\"transparent\",border:\"none\",borderBottom:\"2px solid \".concat(theme.accent),color:theme.accent,marginBottom:\"1rem\",width:\"100%\",padding:\"0.5rem 0\",transition:\"border-color 0.3s ease, color 0.3s ease\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:log.date,onChange:e=>setLog(prevLog=>_objectSpread(_objectSpread({},prevLog),{},{date:e.target.value})),style:{background:theme.surfaceSecondary,color:theme.text,padding:\"0.7rem 1.4rem\",border:\"none\",borderRadius:\"10px\",fontWeight:\"600\",fontSize:\"1rem\",cursor:\"pointer\",marginRight:0,marginTop:0,marginBottom:\"1rem\",transition:\"background 0.2s ease\"},onMouseOver:e=>e.currentTarget.style.background=theme.surfaceTertiary,onMouseOut:e=>e.currentTarget.style.background=theme.surfaceSecondary})]}),/*#__PURE__*/_jsx(\"hr\",{style:{border:\"none\",height:\"1px\",background:theme.border,margin:\"2rem 0\",transition:\"background-color 0.3s ease\"}}),log.rows.map((row,index)=>/*#__PURE__*/_jsx(TrainingLogRow,{rowData:row,onUpdate:updated=>updateRow(index,updated),muscleGroupSuggestions:muscleGroupSuggestions,exerciseSuggestions:exerciseSuggestions,onMuscleGroupChange:handleMuscleGroupChange,currentLogId:log.id},row.id)),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"2rem\",padding:\"1.5rem\",background:theme.cardBackground,borderRadius:\"12px\",border:\"1px solid \".concat(theme.cardBorder),transition:\"background-color 0.3s ease, border-color 0.3s ease\"},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginBottom:\"1rem\",color:theme.accent,fontSize:\"1.2rem\",transition:\"color 0.3s ease\"},children:\"Exercise Management\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addRow,style:{background:theme.accentSecondary,color:theme.accent,padding:\"0.7rem 1.4rem\",border:\"none\",borderRadius:\"10px\",cursor:\"pointer\",fontWeight:600,fontSize:\"1rem\",marginRight:\"1rem\",marginTop:\"1rem\",transition:\"background 0.2s ease\"},onMouseOver:e=>e.currentTarget.style.background=theme.accentHover,onMouseOut:e=>e.currentTarget.style.background=theme.accentSecondary,children:\"+ Add Exercise\"}),/*#__PURE__*/_jsx(\"button\",{onClick:deleteLastRow,disabled:log.rows.length<=1,style:{background:log.rows.length<=1?theme.textMuted:theme.surfaceSecondary,color:log.rows.length<=1?theme.textSecondary:theme.textSecondary,padding:\"0.7rem 1.4rem\",border:\"1px solid \".concat(theme.border),borderRadius:\"10px\",cursor:log.rows.length<=1?\"not-allowed\":\"pointer\",fontWeight:600,fontSize:\"1rem\",marginRight:\"1rem\",marginTop:\"1rem\",transition:\"background 0.2s ease, border-color 0.2s ease\"},onMouseOver:e=>{if(log.rows.length>1){e.currentTarget.style.background=theme.surfaceTertiary;e.currentTarget.style.borderColor=theme.textMuted;}},onMouseOut:e=>{if(log.rows.length>1){e.currentTarget.style.background=theme.surfaceSecondary;e.currentTarget.style.borderColor=theme.border;}},children:\"- Delete Last\"}),/*#__PURE__*/_jsx(\"button\",{onClick:saveManually,style:{background:theme.accent,color:theme.background,padding:\"0.7rem 1.4rem\",border:\"none\",borderRadius:\"10px\",cursor:\"pointer\",fontWeight:600,fontSize:\"1rem\",marginTop:\"1rem\",transition:\"background 0.2s ease\"},onMouseOver:e=>e.currentTarget.style.background=theme.accentHover,onMouseOut:e=>e.currentTarget.style.background=theme.accent,children:\"\\uD83D\\uDCBE Save Workout\"})]})]});}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}