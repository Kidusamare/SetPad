{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidus\\\\OneDrive\\\\Documentos\\\\Summer2025\\\\fitness-tracker-frontend\\\\src\\\\components\\\\TrainingLogTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport TrainingLogRow from \"./TrainingLogRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrainingLogTable() {\n  _s();\n  const {\n    id\n  } = useParams(); // unique log ID from route\n  const [log, setLog] = useState(null);\n  useEffect(() => {\n    // Placeholder: later replace with backend fetch\n    const loadLog = async () => {\n      const today = new Date().toISOString().split(\"T\")[0];\n      const defaultRow = {\n        id: 0,\n        muscleGroup: \"Strength-Focus\\ud83c\\udfcb\\ufe0f\",\n        exercise: \"\",\n        sets: [{\n          reps: \"\",\n          weight: \"\"\n        }, {\n          reps: \"\",\n          weight: \"\"\n        }],\n        notes: \"No notes \\ud83d\\ude0a\",\n        showNotes: false,\n        weightUnit: \"lbs\"\n      };\n      const defaultLog = {\n        id: id,\n        tableName: `New Table - ${today}`,\n        date: today,\n        rows: [defaultRow]\n      };\n      setLog(defaultLog);\n    };\n    loadLog();\n  }, [id]);\n  const updateRow = (index, updatedRow) => {\n    const newRows = [...log.rows];\n    newRows[index] = {\n      ...newRows[index],\n      ...updatedRow\n    };\n    setLog({\n      ...log,\n      rows: newRows\n    });\n  };\n  const addRow = () => {\n    const newRow = {\n      id: log.rows.length,\n      muscleGroup: \"Strength-Focus\\ud83c\\udfcb\\ufe0f\",\n      exercise: \"\",\n      sets: [{\n        reps: \"\",\n        weight: \"\"\n      }],\n      notes: \"No notes \\ud83d\\ude0a\",\n      showNotes: false,\n      weightUnit: \"lbs\"\n    };\n    setLog({\n      ...log,\n      rows: [...log.rows, newRow]\n    });\n  };\n  const deleteLastRow = () => {\n    if (log.rows.length <= 1) return;\n    const newRows = log.rows.slice(0, -1);\n    setLog({\n      ...log,\n      rows: newRows\n    });\n  };\n  if (!log) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      color: \"#f5f6fa\",\n      background: \"#000\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: log.tableName,\n      onChange: e => setLog({\n        ...log,\n        tableName: e.target.value\n      }),\n      onBlur: () => manager.saveTable(log) // optional save-on-blur\n      ,\n      style: {\n        fontSize: \"1.5rem\",\n        fontWeight: \"bold\",\n        background: \"transparent\",\n        border: \"none\",\n        borderBottom: \"1px solid #666\",\n        color: \"#ffd966\",\n        marginBottom: \"1rem\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: log.date,\n      onChange: e => setLog({\n        ...log,\n        date: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), log.rows.map((row, index) => /*#__PURE__*/_jsxDEV(TrainingLogRow, {\n      rowData: row,\n      onUpdate: updated => updateRow(index, updated)\n    }, row.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      children: \"+ Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteLastRow,\n      disabled: log.rows.length <= 1,\n      children: \"- Delete Last\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(TrainingLogTable, \"sV0gQ8PJvljljo9Uv8O91v5LAFI=\", false, function () {\n  return [useParams];\n});\n_c = TrainingLogTable;\nvar _c;\n$RefreshReg$(_c, \"TrainingLogTable\");","map":{"version":3,"names":["React","useEffect","useState","useParams","TrainingLogRow","jsxDEV","_jsxDEV","TrainingLogTable","_s","id","log","setLog","loadLog","today","Date","toISOString","split","defaultRow","muscleGroup","exercise","sets","reps","weight","notes","showNotes","weightUnit","defaultLog","tableName","date","rows","updateRow","index","updatedRow","newRows","addRow","newRow","length","deleteLastRow","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","color","background","minHeight","type","value","onChange","e","target","onBlur","manager","saveTable","fontSize","fontWeight","border","borderBottom","marginBottom","width","map","row","rowData","onUpdate","updated","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/components/TrainingLogTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TrainingLogRow from \"./TrainingLogRow\";\r\n\r\nexport default function TrainingLogTable() {\r\n    const { id } = useParams(); // unique log ID from route\r\n    const [log, setLog] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Placeholder: later replace with backend fetch\r\n        const loadLog = async () => {\r\n            const today = new Date().toISOString().split(\"T\")[0];\r\n            const defaultRow = {\r\n                id: 0,\r\n                muscleGroup: \"Strength-Focus\\ud83c\\udfcb\\ufe0f\",\r\n                exercise: \"\",\r\n                sets: [\r\n                    { reps: \"\", weight: \"\" },\r\n                    { reps: \"\", weight: \"\" }\r\n                ],\r\n                notes: \"No notes \\ud83d\\ude0a\",\r\n                showNotes: false,\r\n                weightUnit: \"lbs\"\r\n            };\r\n\r\n            const defaultLog = {\r\n                id: id,\r\n                tableName: `New Table - ${today}`,\r\n                date: today,\r\n                rows: [defaultRow]\r\n            };\r\n\r\n            setLog(defaultLog);\r\n        };\r\n\r\n        loadLog();\r\n    }, [id]);\r\n\r\n    const updateRow = (index, updatedRow) => {\r\n        const newRows = [...log.rows];\r\n        newRows[index] = { ...newRows[index], ...updatedRow };\r\n        setLog({ ...log, rows: newRows });\r\n    };\r\n\r\n    const addRow = () => {\r\n        const newRow = {\r\n            id: log.rows.length,\r\n            muscleGroup: \"Strength-Focus\\ud83c\\udfcb\\ufe0f\",\r\n            exercise: \"\",\r\n            sets: [ { reps: \"\", weight: \"\" } ],\r\n            notes: \"No notes \\ud83d\\ude0a\",\r\n            showNotes: false,\r\n            weightUnit: \"lbs\"\r\n        };\r\n        setLog({ ...log, rows: [...log.rows, newRow] });\r\n    };\r\n\r\n    const deleteLastRow = () => {\r\n        if (log.rows.length <= 1) return;\r\n        const newRows = log.rows.slice(0, -1);\r\n        setLog({ ...log, rows: newRows });\r\n    };\r\n\r\n    if (!log) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div style={{ padding: \"2rem\", color: \"#f5f6fa\", background: \"#000\", minHeight: \"100vh\" }}>\r\n            <input\r\n                type=\"text\"\r\n                value={log.tableName}\r\n                onChange={(e) => setLog({ ...log, tableName: e.target.value })}\r\n                onBlur={() => manager.saveTable(log)} // optional save-on-blur\r\n                style={{\r\n                    fontSize: \"1.5rem\",\r\n                    fontWeight: \"bold\",\r\n                    background: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"1px solid #666\",\r\n                    color: \"#ffd966\",\r\n                    marginBottom: \"1rem\",\r\n                    width: \"100%\"\r\n                }}\r\n            />\r\n            <input\r\n                type=\"date\"\r\n                value={log.date}\r\n                onChange={(e) => setLog({ ...log, date: e.target.value })}\r\n            />\r\n            <hr />\r\n\r\n            {log.rows.map((row, index) => (\r\n                <TrainingLogRow\r\n                    key={row.id}\r\n                    rowData={row}\r\n                    onUpdate={(updated) => updateRow(index, updated)}\r\n                />\r\n            ))}\r\n\r\n            <button onClick={addRow}>+ Add Exercise</button>\r\n            <button onClick={deleteLastRow} disabled={log.rows.length <= 1}>\r\n                - Delete Last\r\n            </button>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}