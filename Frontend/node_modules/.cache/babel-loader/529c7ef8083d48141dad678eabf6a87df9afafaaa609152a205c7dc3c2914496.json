{"ast":null,"code":"export default class TrainingLogManager {\n  constructor(token) {\n    this.token = token;\n    this.BASE_URL = \"https://your-api.onrender.com/api/tables\";\n  }\n  async loadTable(id) {\n    const res = await fetch(`${this.BASE_URL}/${encodeURIComponent(id)}`, {\n      headers: {\n        Authorization: `Bearer ${this.token}`\n      }\n    });\n    if (!res.ok) throw new Error(\"Failed to load\");\n    return await res.json();\n  }\n  async saveTable(data) {\n    const res = await fetch(this.BASE_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${this.token}`\n      },\n      body: JSON.stringify(data)\n    });\n    if (!res.ok) throw new Error(\"Save failed\");\n    return await res.json();\n  }\n  async deleteTable(id) {\n    const res = await fetch(`${this.BASE_URL}/${encodeURIComponent(id)}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${this.token}`\n      }\n    });\n    if (!res.ok) throw new Error(\"Delete failed\");\n    return true;\n  }\n  async listTables() {\n    const res = await fetch(this.BASE_URL, {\n      headers: {\n        Authorization: `Bearer ${this.token}`\n      }\n    });\n    if (!res.ok) throw new Error(\"Failed to fetch tables\");\n    return await res.json();\n  }\n  createNewTable() {\n    const id = crypto.randomUUID();\n    const today = new Date().toISOString().split(\"T\")[0];\n    return {\n      id,\n      tableName: `New Table - ${today}`,\n      date: today,\n      rows: [{\n        id: 0,\n        muscleGroup: \"\",\n        exercise: \"\",\n        sets: [{\n          reps: \"\",\n          weight: \"\"\n        }],\n        notes: \"\",\n        showNotes: false,\n        weightUnit: \"lbs\"\n      }]\n    };\n  }\n}","map":{"version":3,"names":["TrainingLogManager","constructor","token","BASE_URL","loadTable","id","res","fetch","encodeURIComponent","headers","Authorization","ok","Error","json","saveTable","data","method","body","JSON","stringify","deleteTable","listTables","createNewTable","crypto","randomUUID","today","Date","toISOString","split","tableName","date","rows","muscleGroup","exercise","sets","reps","weight","notes","showNotes","weightUnit"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/components/TrainingLogManager.jsx"],"sourcesContent":["export default class TrainingLogManager {\r\n    constructor(token) {\r\n        this.token = token;\r\n        this.BASE_URL = \"https://your-api.onrender.com/api/tables\";\r\n    }\r\n\r\n    async loadTable(id) {\r\n        const res = await fetch(`${this.BASE_URL}/${encodeURIComponent(id)}`, {\r\n            headers: { Authorization: `Bearer ${this.token}` }\r\n        });\r\n        if (!res.ok) throw new Error(\"Failed to load\");\r\n        return await res.json();\r\n    }\r\n\r\n    async saveTable(data) {\r\n        const res = await fetch(this.BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        if (!res.ok) throw new Error(\"Save failed\");\r\n        return await res.json();\r\n    }\r\n\r\n    async deleteTable(id) {\r\n        const res = await fetch(`${this.BASE_URL}/${encodeURIComponent(id)}`, {\r\n            method: \"DELETE\",\r\n            headers: { Authorization: `Bearer ${this.token}` }\r\n        });\r\n        if (!res.ok) throw new Error(\"Delete failed\");\r\n        return true;\r\n    }\r\n\r\n    async listTables() {\r\n        const res = await fetch(this.BASE_URL, {\r\n            headers: { Authorization: `Bearer ${this.token}` }\r\n        });\r\n        if (!res.ok) throw new Error(\"Failed to fetch tables\");\r\n        return await res.json();\r\n    }\r\n\r\n    createNewTable() {\r\n        const id = crypto.randomUUID();\r\n        const today = new Date().toISOString().split(\"T\")[0];\r\n        return {\r\n            id,\r\n            tableName: `New Table - ${today}`,\r\n            date: today,\r\n            rows: [\r\n                {\r\n                    id: 0,\r\n                    muscleGroup: \"\",\r\n                    exercise: \"\",\r\n                    sets: [{ reps: \"\", weight: \"\" }],\r\n                    notes: \"\",\r\n                    showNotes: false,\r\n                    weightUnit: \"lbs\",\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\n"],"mappings":"AAAA,eAAe,MAAMA,kBAAkB,CAAC;EACpCC,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAG,0CAA0C;EAC9D;EAEA,MAAMC,SAASA,CAACC,EAAE,EAAE;IAChB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACJ,QAAQ,IAAIK,kBAAkB,CAACH,EAAE,CAAC,EAAE,EAAE;MAClEI,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAU,IAAI,CAACR,KAAK;MAAG;IACrD,CAAC,CAAC;IACF,IAAI,CAACI,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IAC9C,OAAO,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAC3B;EAEA,MAAMC,SAASA,CAACC,IAAI,EAAE;IAClB,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACJ,QAAQ,EAAE;MACnCa,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAU,IAAI,CAACR,KAAK;MACvC,CAAC;MACDe,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI;IAC7B,CAAC,CAAC;IACF,IAAI,CAACT,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,aAAa,CAAC;IAC3C,OAAO,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAC3B;EAEA,MAAMO,WAAWA,CAACf,EAAE,EAAE;IAClB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAG,IAAI,CAACJ,QAAQ,IAAIK,kBAAkB,CAACH,EAAE,CAAC,EAAE,EAAE;MAClEW,MAAM,EAAE,QAAQ;MAChBP,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAU,IAAI,CAACR,KAAK;MAAG;IACrD,CAAC,CAAC;IACF,IAAI,CAACI,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAC7C,OAAO,IAAI;EACf;EAEA,MAAMS,UAAUA,CAAA,EAAG;IACf,MAAMf,GAAG,GAAG,MAAMC,KAAK,CAAC,IAAI,CAACJ,QAAQ,EAAE;MACnCM,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAU,IAAI,CAACR,KAAK;MAAG;IACrD,CAAC,CAAC;IACF,IAAI,CAACI,GAAG,CAACK,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IACtD,OAAO,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;EAC3B;EAEAS,cAAcA,CAAA,EAAG;IACb,MAAMjB,EAAE,GAAGkB,MAAM,CAACC,UAAU,CAAC,CAAC;IAC9B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,OAAO;MACHvB,EAAE;MACFwB,SAAS,EAAE,eAAeJ,KAAK,EAAE;MACjCK,IAAI,EAAEL,KAAK;MACXM,IAAI,EAAE,CACF;QACI1B,EAAE,EAAE,CAAC;QACL2B,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAC,CAAC;QAChCC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,KAAK;QAChBC,UAAU,EAAE;MAChB,CAAC;IAET,CAAC;EACL;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}