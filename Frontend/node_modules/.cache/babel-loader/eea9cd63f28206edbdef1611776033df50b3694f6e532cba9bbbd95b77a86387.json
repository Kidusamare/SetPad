{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const API_BASE=process.env.REACT_APP_API_URL||'http://localhost:8000';export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);// Check if user is authenticated on app start\nuseEffect(()=>{const initAuth=async()=>{const storedToken=localStorage.getItem('token');if(storedToken){try{const response=await fetch(\"\".concat(API_BASE,\"/auth/me\"),{headers:{'Authorization':\"Bearer \".concat(storedToken)}});if(response.ok){const userData=await response.json();setUser(userData);setToken(storedToken);}else{localStorage.removeItem('token');setToken(null);}}catch(error){console.error('Auth check failed:',error);localStorage.removeItem('token');setToken(null);}}setLoading(false);};initAuth();},[]);const login=async(username,password)=>{try{const formData=new FormData();formData.append('username',username);formData.append('password',password);const response=await fetch(\"\".concat(API_BASE,\"/auth/token\"),{method:'POST',body:formData});if(response.ok){const data=await response.json();const newToken=data.access_token;localStorage.setItem('token',newToken);setToken(newToken);// Get user info\nconst userResponse=await fetch(\"\".concat(API_BASE,\"/auth/me\"),{headers:{'Authorization':\"Bearer \".concat(newToken)}});if(userResponse.ok){const userData=await userResponse.json();setUser(userData);return{success:true};}}else{const errorData=await response.json();return{success:false,error:errorData.detail||'Login failed'};}}catch(error){return{success:false,error:'Network error occurred'};}};const register=async(username,email,password)=>{try{const response=await fetch(\"\".concat(API_BASE,\"/auth/register\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,email,password})});if(response.ok){const userData=await response.json();// Auto-login after registration\nreturn await login(username,password);}else{const errorData=await response.json();return{success:false,error:errorData.detail||'Registration failed'};}}catch(error){return{success:false,error:'Network error occurred'};}};const logout=()=>{localStorage.removeItem('token');setToken(null);setUser(null);};const value={user,token,loading,isAuthenticated:!!token&&!!user,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","API_BASE","process","env","REACT_APP_API_URL","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","initAuth","storedToken","response","fetch","concat","headers","ok","userData","json","removeItem","error","console","login","username","password","formData","FormData","append","method","body","data","newToken","access_token","setItem","userResponse","success","errorData","detail","register","email","JSON","stringify","logout","value","isAuthenticated","Provider"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/Frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst API_BASE = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is authenticated on app start\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const storedToken = localStorage.getItem('token');\r\n      if (storedToken) {\r\n        try {\r\n          const response = await fetch(`${API_BASE}/auth/me`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${storedToken}`\r\n            }\r\n          });\r\n          \r\n          if (response.ok) {\r\n            const userData = await response.json();\r\n            setUser(userData);\r\n            setToken(storedToken);\r\n          } else {\r\n            localStorage.removeItem('token');\r\n            setToken(null);\r\n          }\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('username', username);\r\n      formData.append('password', password);\r\n\r\n      const response = await fetch(`${API_BASE}/auth/token`, {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const newToken = data.access_token;\r\n        \r\n        localStorage.setItem('token', newToken);\r\n        setToken(newToken);\r\n\r\n        // Get user info\r\n        const userResponse = await fetch(`${API_BASE}/auth/me`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${newToken}`\r\n          }\r\n        });\r\n\r\n        if (userResponse.ok) {\r\n          const userData = await userResponse.json();\r\n          setUser(userData);\r\n          return { success: true };\r\n        }\r\n      } else {\r\n        const errorData = await response.json();\r\n        return { success: false, error: errorData.detail || 'Login failed' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Network error occurred' };\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      const response = await fetch(`${API_BASE}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username,\r\n          email,\r\n          password,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        // Auto-login after registration\r\n        return await login(username, password);\r\n      } else {\r\n        const errorData = await response.json();\r\n        return { success: false, error: errorData.detail || 'Registration failed' };\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: 'Network error occurred' };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    isAuthenticated: !!token && !!user,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}