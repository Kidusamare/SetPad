{"ast":null,"code":"// Predefined workout templates for quick-fill functionality\nexport const WORKOUT_TEMPLATES = {\n  'push-day': {\n    name: 'Push Day',\n    description: 'Chest, Shoulders, and Triceps workout',\n    exercises: [{\n      muscleGroup: 'Chest',\n      exercise: 'Bench Press',\n      sets: [{\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }],\n      notes: 'Focus on controlled movement'\n    }, {\n      muscleGroup: 'Chest',\n      exercise: 'Incline Dumbbell Press',\n      sets: [{\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }],\n      notes: '45-degree incline'\n    }, {\n      muscleGroup: 'Shoulders',\n      exercise: 'Overhead Press',\n      sets: [{\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }],\n      notes: 'Keep core tight'\n    }, {\n      muscleGroup: 'Shoulders',\n      exercise: 'Lateral Raises',\n      sets: [{\n        reps: '12-15',\n        weight: ''\n      }, {\n        reps: '12-15',\n        weight: ''\n      }, {\n        reps: '12-15',\n        weight: ''\n      }],\n      notes: 'Control the negative'\n    }, {\n      muscleGroup: 'Triceps',\n      exercise: 'Tricep Dips',\n      sets: [{\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }],\n      notes: 'Full range of motion'\n    }]\n  },\n  'pull-day': {\n    name: 'Pull Day',\n    description: 'Back and Biceps workout',\n    exercises: [{\n      muscleGroup: 'Back',\n      exercise: 'Pull-ups',\n      sets: [{\n        reps: '6-8',\n        weight: ''\n      }, {\n        reps: '6-8',\n        weight: ''\n      }, {\n        reps: '6-8',\n        weight: ''\n      }],\n      notes: 'Use assistance if needed'\n    }, {\n      muscleGroup: 'Back',\n      exercise: 'Bent-over Rows',\n      sets: [{\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }],\n      notes: 'Squeeze shoulder blades'\n    }, {\n      muscleGroup: 'Back',\n      exercise: 'Lat Pulldowns',\n      sets: [{\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }],\n      notes: 'Pull to upper chest'\n    }, {\n      muscleGroup: 'Biceps',\n      exercise: 'Barbell Curls',\n      sets: [{\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }, {\n        reps: '10-12',\n        weight: ''\n      }],\n      notes: 'No swinging'\n    }, {\n      muscleGroup: 'Biceps',\n      exercise: 'Hammer Curls',\n      sets: [{\n        reps: '12-15',\n        weight: ''\n      }, {\n        reps: '12-15',\n        weight: ''\n      }, {\n        reps: '12-15',\n        weight: ''\n      }],\n      notes: 'Neutral grip'\n    }]\n  },\n  'leg-day': {\n    name: 'Leg Day',\n    description: 'Comprehensive lower body workout',\n    exercises: [{\n      muscleGroup: 'Legs',\n      exercise: 'Squats',\n      sets: [{\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }],\n      notes: 'Go below parallel'\n    }, {\n      muscleGroup: 'Legs',\n      exercise: 'Romanian Deadlifts',\n      sets: [{\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }, {\n        reps: '8-10',\n        weight: ''\n      }],\n      notes: 'Hinge at hips'\n    }, {\n      muscleGroup: 'Legs',\n      exercise: 'Leg Press',\n      sets: [{\n        reps: '12-15',\n        weight: ''\n      }, {\n        reps: '12-15',\n        weight: ''\n      }, {\n        reps: '12-15',\n        weight: ''\n      }],\n      notes: 'Full range of motion'\n    }, {\n      muscleGroup: 'Legs',\n      exercise: 'Walking Lunges',\n      sets: [{\n        reps: '10-12 each leg',\n        weight: ''\n      }, {\n        reps: '10-12 each leg',\n        weight: ''\n      }, {\n        reps: '10-12 each leg',\n        weight: ''\n      }],\n      notes: 'Step out wide'\n    }, {\n      muscleGroup: 'Calves',\n      exercise: 'Calf Raises',\n      sets: [{\n        reps: '15-20',\n        weight: ''\n      }, {\n        reps: '15-20',\n        weight: ''\n      }, {\n        reps: '15-20',\n        weight: ''\n      }],\n      notes: 'Pause at the top'\n    }]\n  },\n  'upper-body': {\n    name: 'Upper Body',\n    description: 'Complete upper body workout',\n    exercises: [{\n      muscleGroup: 'Chest',\n      exercise: 'Push-ups',\n      sets: [{\n        reps: '10-15',\n        weight: ''\n      }, {\n        reps: '10-15',\n        weight: ''\n      }, {\n        reps: '10-15',\n        weight: ''\n      }],\n      notes: 'Modify as needed'\n    }, {\n      muscleGroup: 'Back',\n      exercise: 'Inverted Rows',\n      sets: [{\n        reps: '8-12',\n        weight: ''\n      }, {\n        reps: '8-12',\n        weight: ''\n      }, {\n        reps: '8-12',\n        weight: ''\n      }],\n      notes: 'Body straight'\n    }, {\n      muscleGroup: 'Shoulders',\n      exercise: 'Pike Push-ups',\n      sets: [{\n        reps: '6-10',\n        weight: ''\n      }, {\n        reps: '6-10',\n        weight: ''\n      }, {\n        reps: '6-10',\n        weight: ''\n      }],\n      notes: 'Hands shoulder-width apart'\n    }, {\n      muscleGroup: 'Arms',\n      exercise: 'Diamond Push-ups',\n      sets: [{\n        reps: '5-8',\n        weight: ''\n      }, {\n        reps: '5-8',\n        weight: ''\n      }],\n      notes: 'Targets triceps'\n    }]\n  },\n  'cardio-strength': {\n    name: 'Cardio + Strength',\n    description: 'High-intensity circuit training',\n    exercises: [{\n      muscleGroup: 'Full Body',\n      exercise: 'Burpees',\n      sets: [{\n        reps: '10-15',\n        weight: ''\n      }, {\n        reps: '10-15',\n        weight: ''\n      }, {\n        reps: '10-15',\n        weight: ''\n      }],\n      notes: '30 sec rest between sets'\n    }, {\n      muscleGroup: 'Legs',\n      exercise: 'Jump Squats',\n      sets: [{\n        reps: '15-20',\n        weight: ''\n      }, {\n        reps: '15-20',\n        weight: ''\n      }, {\n        reps: '15-20',\n        weight: ''\n      }],\n      notes: 'Land softly'\n    }, {\n      muscleGroup: 'Core',\n      exercise: 'Mountain Climbers',\n      sets: [{\n        reps: '20-30',\n        weight: ''\n      }, {\n        reps: '20-30',\n        weight: ''\n      }, {\n        reps: '20-30',\n        weight: ''\n      }],\n      notes: 'Keep hips level'\n    }, {\n      muscleGroup: 'Full Body',\n      exercise: 'Kettlebell Swings',\n      sets: [{\n        reps: '15-20',\n        weight: ''\n      }, {\n        reps: '15-20',\n        weight: ''\n      }, {\n        reps: '15-20',\n        weight: ''\n      }],\n      notes: 'Hip drive, not arms'\n    }]\n  },\n  'beginner-full-body': {\n    name: 'Beginner Full Body',\n    description: 'Perfect for those starting their fitness journey',\n    exercises: [{\n      muscleGroup: 'Legs',\n      exercise: 'Bodyweight Squats',\n      sets: [{\n        reps: '10-15',\n        weight: ''\n      }, {\n        reps: '10-15',\n        weight: ''\n      }],\n      notes: 'Focus on form'\n    }, {\n      muscleGroup: 'Chest',\n      exercise: 'Modified Push-ups',\n      sets: [{\n        reps: '5-10',\n        weight: ''\n      }, {\n        reps: '5-10',\n        weight: ''\n      }],\n      notes: 'Knees down if needed'\n    }, {\n      muscleGroup: 'Core',\n      exercise: 'Plank',\n      sets: [{\n        reps: '20-30 seconds',\n        weight: ''\n      }, {\n        reps: '20-30 seconds',\n        weight: ''\n      }],\n      notes: 'Keep body straight'\n    }, {\n      muscleGroup: 'Legs',\n      exercise: 'Glute Bridges',\n      sets: [{\n        reps: '10-15',\n        weight: ''\n      }, {\n        reps: '10-15',\n        weight: ''\n      }],\n      notes: 'Squeeze glutes at top'\n    }]\n  }\n};\n\n// Function to get template by ID\nexport const getWorkoutTemplate = templateId => {\n  return WORKOUT_TEMPLATES[templateId] || null;\n};\n\n// Function to get all template names for display\nexport const getTemplateList = () => {\n  return Object.keys(WORKOUT_TEMPLATES).map(key => ({\n    id: key,\n    name: WORKOUT_TEMPLATES[key].name,\n    description: WORKOUT_TEMPLATES[key].description,\n    exerciseCount: WORKOUT_TEMPLATES[key].exercises.length\n  }));\n};\n\n// Function to apply template to a workout log\nexport const applyTemplateToLog = (templateId, currentLog) => {\n  const template = getWorkoutTemplate(templateId);\n  if (!template) return currentLog;\n\n  // Convert template exercises to log rows\n  const templateRows = template.exercises.map((exercise, index) => ({\n    id: index,\n    muscleGroup: exercise.muscleGroup,\n    exercise: exercise.exercise,\n    sets: exercise.sets.map(set => ({\n      reps: set.reps,\n      weight: set.weight\n    })),\n    notes: exercise.notes || '',\n    showNotes: !!exercise.notes,\n    weightUnit: 'lbs'\n  }));\n  return {\n    ...currentLog,\n    tableName: template.name,\n    rows: templateRows\n  };\n};\n\n// Function to create smart defaults based on user history\nexport const getSmartDefaults = async (exercise, userHistory = []) => {\n  var _recentEntry$sets, _recentEntry$sets$, _recentEntry$sets2, _recentEntry$sets2$;\n  // Filter history for the specific exercise\n  const exerciseHistory = userHistory.filter(entry => {\n    var _entry$exercise;\n    return ((_entry$exercise = entry.exercise) === null || _entry$exercise === void 0 ? void 0 : _entry$exercise.toLowerCase()) === (exercise === null || exercise === void 0 ? void 0 : exercise.toLowerCase());\n  });\n  if (exerciseHistory.length === 0) {\n    return {\n      sets: [{\n        reps: '',\n        weight: ''\n      }],\n      suggestedReps: '',\n      suggestedWeight: ''\n    };\n  }\n\n  // Get the most recent entry for this exercise\n  const recentEntry = exerciseHistory[exerciseHistory.length - 1];\n\n  // Calculate suggested progression (small increase in weight or reps)\n  const lastWeight = parseFloat((_recentEntry$sets = recentEntry.sets) === null || _recentEntry$sets === void 0 ? void 0 : (_recentEntry$sets$ = _recentEntry$sets[0]) === null || _recentEntry$sets$ === void 0 ? void 0 : _recentEntry$sets$.weight) || 0;\n  const lastReps = parseInt((_recentEntry$sets2 = recentEntry.sets) === null || _recentEntry$sets2 === void 0 ? void 0 : (_recentEntry$sets2$ = _recentEntry$sets2[0]) === null || _recentEntry$sets2$ === void 0 ? void 0 : _recentEntry$sets2$.reps) || 0;\n  const suggestedWeight = lastWeight > 0 ? (lastWeight + 2.5).toString() : '';\n  const suggestedReps = lastReps > 0 ? lastReps.toString() : '';\n  return {\n    sets: recentEntry.sets || [{\n      reps: '',\n      weight: ''\n    }],\n    suggestedReps,\n    suggestedWeight,\n    lastPerformed: recentEntry.date,\n    progressionNote: lastWeight > 0 ? `Last time: ${lastWeight}lbs` : ''\n  };\n};","map":{"version":3,"names":["WORKOUT_TEMPLATES","name","description","exercises","muscleGroup","exercise","sets","reps","weight","notes","getWorkoutTemplate","templateId","getTemplateList","Object","keys","map","key","id","exerciseCount","length","applyTemplateToLog","currentLog","template","templateRows","index","set","showNotes","weightUnit","tableName","rows","getSmartDefaults","userHistory","_recentEntry$sets","_recentEntry$sets$","_recentEntry$sets2","_recentEntry$sets2$","exerciseHistory","filter","entry","_entry$exercise","toLowerCase","suggestedReps","suggestedWeight","recentEntry","lastWeight","parseFloat","lastReps","parseInt","toString","lastPerformed","date","progressionNote"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/services/workoutTemplates.js"],"sourcesContent":["// Predefined workout templates for quick-fill functionality\nexport const WORKOUT_TEMPLATES = {\n  'push-day': {\n    name: 'Push Day',\n    description: 'Chest, Shoulders, and Triceps workout',\n    exercises: [\n      {\n        muscleGroup: 'Chest',\n        exercise: 'Bench Press',\n        sets: [\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' }\n        ],\n        notes: 'Focus on controlled movement'\n      },\n      {\n        muscleGroup: 'Chest',\n        exercise: 'Incline Dumbbell Press',\n        sets: [\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' }\n        ],\n        notes: '45-degree incline'\n      },\n      {\n        muscleGroup: 'Shoulders',\n        exercise: 'Overhead Press',\n        sets: [\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' }\n        ],\n        notes: 'Keep core tight'\n      },\n      {\n        muscleGroup: 'Shoulders',\n        exercise: 'Lateral Raises',\n        sets: [\n          { reps: '12-15', weight: '' },\n          { reps: '12-15', weight: '' },\n          { reps: '12-15', weight: '' }\n        ],\n        notes: 'Control the negative'\n      },\n      {\n        muscleGroup: 'Triceps',\n        exercise: 'Tricep Dips',\n        sets: [\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' }\n        ],\n        notes: 'Full range of motion'\n      }\n    ]\n  },\n  \n  'pull-day': {\n    name: 'Pull Day',\n    description: 'Back and Biceps workout',\n    exercises: [\n      {\n        muscleGroup: 'Back',\n        exercise: 'Pull-ups',\n        sets: [\n          { reps: '6-8', weight: '' },\n          { reps: '6-8', weight: '' },\n          { reps: '6-8', weight: '' }\n        ],\n        notes: 'Use assistance if needed'\n      },\n      {\n        muscleGroup: 'Back',\n        exercise: 'Bent-over Rows',\n        sets: [\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' }\n        ],\n        notes: 'Squeeze shoulder blades'\n      },\n      {\n        muscleGroup: 'Back',\n        exercise: 'Lat Pulldowns',\n        sets: [\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' }\n        ],\n        notes: 'Pull to upper chest'\n      },\n      {\n        muscleGroup: 'Biceps',\n        exercise: 'Barbell Curls',\n        sets: [\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' },\n          { reps: '10-12', weight: '' }\n        ],\n        notes: 'No swinging'\n      },\n      {\n        muscleGroup: 'Biceps',\n        exercise: 'Hammer Curls',\n        sets: [\n          { reps: '12-15', weight: '' },\n          { reps: '12-15', weight: '' },\n          { reps: '12-15', weight: '' }\n        ],\n        notes: 'Neutral grip'\n      }\n    ]\n  },\n  \n  'leg-day': {\n    name: 'Leg Day',\n    description: 'Comprehensive lower body workout',\n    exercises: [\n      {\n        muscleGroup: 'Legs',\n        exercise: 'Squats',\n        sets: [\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' }\n        ],\n        notes: 'Go below parallel'\n      },\n      {\n        muscleGroup: 'Legs',\n        exercise: 'Romanian Deadlifts',\n        sets: [\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' },\n          { reps: '8-10', weight: '' }\n        ],\n        notes: 'Hinge at hips'\n      },\n      {\n        muscleGroup: 'Legs',\n        exercise: 'Leg Press',\n        sets: [\n          { reps: '12-15', weight: '' },\n          { reps: '12-15', weight: '' },\n          { reps: '12-15', weight: '' }\n        ],\n        notes: 'Full range of motion'\n      },\n      {\n        muscleGroup: 'Legs',\n        exercise: 'Walking Lunges',\n        sets: [\n          { reps: '10-12 each leg', weight: '' },\n          { reps: '10-12 each leg', weight: '' },\n          { reps: '10-12 each leg', weight: '' }\n        ],\n        notes: 'Step out wide'\n      },\n      {\n        muscleGroup: 'Calves',\n        exercise: 'Calf Raises',\n        sets: [\n          { reps: '15-20', weight: '' },\n          { reps: '15-20', weight: '' },\n          { reps: '15-20', weight: '' }\n        ],\n        notes: 'Pause at the top'\n      }\n    ]\n  },\n  \n  'upper-body': {\n    name: 'Upper Body',\n    description: 'Complete upper body workout',\n    exercises: [\n      {\n        muscleGroup: 'Chest',\n        exercise: 'Push-ups',\n        sets: [\n          { reps: '10-15', weight: '' },\n          { reps: '10-15', weight: '' },\n          { reps: '10-15', weight: '' }\n        ],\n        notes: 'Modify as needed'\n      },\n      {\n        muscleGroup: 'Back',\n        exercise: 'Inverted Rows',\n        sets: [\n          { reps: '8-12', weight: '' },\n          { reps: '8-12', weight: '' },\n          { reps: '8-12', weight: '' }\n        ],\n        notes: 'Body straight'\n      },\n      {\n        muscleGroup: 'Shoulders',\n        exercise: 'Pike Push-ups',\n        sets: [\n          { reps: '6-10', weight: '' },\n          { reps: '6-10', weight: '' },\n          { reps: '6-10', weight: '' }\n        ],\n        notes: 'Hands shoulder-width apart'\n      },\n      {\n        muscleGroup: 'Arms',\n        exercise: 'Diamond Push-ups',\n        sets: [\n          { reps: '5-8', weight: '' },\n          { reps: '5-8', weight: '' },\n        ],\n        notes: 'Targets triceps'\n      }\n    ]\n  },\n  \n  'cardio-strength': {\n    name: 'Cardio + Strength',\n    description: 'High-intensity circuit training',\n    exercises: [\n      {\n        muscleGroup: 'Full Body',\n        exercise: 'Burpees',\n        sets: [\n          { reps: '10-15', weight: '' },\n          { reps: '10-15', weight: '' },\n          { reps: '10-15', weight: '' }\n        ],\n        notes: '30 sec rest between sets'\n      },\n      {\n        muscleGroup: 'Legs',\n        exercise: 'Jump Squats',\n        sets: [\n          { reps: '15-20', weight: '' },\n          { reps: '15-20', weight: '' },\n          { reps: '15-20', weight: '' }\n        ],\n        notes: 'Land softly'\n      },\n      {\n        muscleGroup: 'Core',\n        exercise: 'Mountain Climbers',\n        sets: [\n          { reps: '20-30', weight: '' },\n          { reps: '20-30', weight: '' },\n          { reps: '20-30', weight: '' }\n        ],\n        notes: 'Keep hips level'\n      },\n      {\n        muscleGroup: 'Full Body',\n        exercise: 'Kettlebell Swings',\n        sets: [\n          { reps: '15-20', weight: '' },\n          { reps: '15-20', weight: '' },\n          { reps: '15-20', weight: '' }\n        ],\n        notes: 'Hip drive, not arms'\n      }\n    ]\n  },\n  \n  'beginner-full-body': {\n    name: 'Beginner Full Body',\n    description: 'Perfect for those starting their fitness journey',\n    exercises: [\n      {\n        muscleGroup: 'Legs',\n        exercise: 'Bodyweight Squats',\n        sets: [\n          { reps: '10-15', weight: '' },\n          { reps: '10-15', weight: '' }\n        ],\n        notes: 'Focus on form'\n      },\n      {\n        muscleGroup: 'Chest',\n        exercise: 'Modified Push-ups',\n        sets: [\n          { reps: '5-10', weight: '' },\n          { reps: '5-10', weight: '' }\n        ],\n        notes: 'Knees down if needed'\n      },\n      {\n        muscleGroup: 'Core',\n        exercise: 'Plank',\n        sets: [\n          { reps: '20-30 seconds', weight: '' },\n          { reps: '20-30 seconds', weight: '' }\n        ],\n        notes: 'Keep body straight'\n      },\n      {\n        muscleGroup: 'Legs',\n        exercise: 'Glute Bridges',\n        sets: [\n          { reps: '10-15', weight: '' },\n          { reps: '10-15', weight: '' }\n        ],\n        notes: 'Squeeze glutes at top'\n      }\n    ]\n  }\n};\n\n// Function to get template by ID\nexport const getWorkoutTemplate = (templateId) => {\n  return WORKOUT_TEMPLATES[templateId] || null;\n};\n\n// Function to get all template names for display\nexport const getTemplateList = () => {\n  return Object.keys(WORKOUT_TEMPLATES).map(key => ({\n    id: key,\n    name: WORKOUT_TEMPLATES[key].name,\n    description: WORKOUT_TEMPLATES[key].description,\n    exerciseCount: WORKOUT_TEMPLATES[key].exercises.length\n  }));\n};\n\n// Function to apply template to a workout log\nexport const applyTemplateToLog = (templateId, currentLog) => {\n  const template = getWorkoutTemplate(templateId);\n  if (!template) return currentLog;\n  \n  // Convert template exercises to log rows\n  const templateRows = template.exercises.map((exercise, index) => ({\n    id: index,\n    muscleGroup: exercise.muscleGroup,\n    exercise: exercise.exercise,\n    sets: exercise.sets.map(set => ({\n      reps: set.reps,\n      weight: set.weight\n    })),\n    notes: exercise.notes || '',\n    showNotes: !!exercise.notes,\n    weightUnit: 'lbs'\n  }));\n  \n  return {\n    ...currentLog,\n    tableName: template.name,\n    rows: templateRows\n  };\n};\n\n// Function to create smart defaults based on user history\nexport const getSmartDefaults = async (exercise, userHistory = []) => {\n  // Filter history for the specific exercise\n  const exerciseHistory = userHistory.filter(\n    entry => entry.exercise?.toLowerCase() === exercise?.toLowerCase()\n  );\n  \n  if (exerciseHistory.length === 0) {\n    return {\n      sets: [{ reps: '', weight: '' }],\n      suggestedReps: '',\n      suggestedWeight: ''\n    };\n  }\n  \n  // Get the most recent entry for this exercise\n  const recentEntry = exerciseHistory[exerciseHistory.length - 1];\n  \n  // Calculate suggested progression (small increase in weight or reps)\n  const lastWeight = parseFloat(recentEntry.sets?.[0]?.weight) || 0;\n  const lastReps = parseInt(recentEntry.sets?.[0]?.reps) || 0;\n  \n  const suggestedWeight = lastWeight > 0 ? (lastWeight + 2.5).toString() : '';\n  const suggestedReps = lastReps > 0 ? lastReps.toString() : '';\n  \n  return {\n    sets: recentEntry.sets || [{ reps: '', weight: '' }],\n    suggestedReps,\n    suggestedWeight,\n    lastPerformed: recentEntry.date,\n    progressionNote: lastWeight > 0 ? `Last time: ${lastWeight}lbs` : ''\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}