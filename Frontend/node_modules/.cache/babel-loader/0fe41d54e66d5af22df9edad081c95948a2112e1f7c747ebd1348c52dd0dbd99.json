{"ast":null,"code":"import{useCallback,useEffect,useRef}from'react';/**\r\n * Custom hook for debounced auto-save functionality\r\n * Prevents infinite loops by debouncing save operations and tracking save state\r\n * \r\n * @param {Function} saveFunction - Function to call for saving data\r\n * @param {*} data - Data to save (will trigger save when changed)\r\n * @param {number} delay - Debounce delay in milliseconds (default: 2000)\r\n * @param {boolean} enabled - Whether auto-save is enabled (default: true)\r\n * @returns {Object} - { save: manualSaveFunction, isSaving: boolean, lastSaved: Date }\r\n */export const useAutoSave=function(saveFunction,data){let delay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2000;let enabled=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;const timeoutRef=useRef(null);const isSavingRef=useRef(false);const lastSavedDataRef=useRef(null);const lastSavedTimeRef=useRef(null);// Create a stable save function that doesn't change on every render\nconst stableSaveFunction=useCallback(saveFunction,[]);// Manual save function that can be called immediately\nconst manualSave=useCallback(async()=>{if(isSavingRef.current)return;try{isSavingRef.current=true;await stableSaveFunction(data);lastSavedDataRef.current=JSON.stringify(data);lastSavedTimeRef.current=new Date();}catch(error){console.error('Save failed:',error);throw error;}finally{isSavingRef.current=false;}},[data,stableSaveFunction]);// Auto-save effect\nuseEffect(()=>{if(!enabled||!data)return;// Don't auto-save if data hasn't changed\nconst currentDataString=JSON.stringify(data);if(currentDataString===lastSavedDataRef.current){return;}// Don't auto-save if currently saving\nif(isSavingRef.current){return;}// Clear existing timeout\nif(timeoutRef.current){clearTimeout(timeoutRef.current);}// Set new timeout for debounced save\ntimeoutRef.current=setTimeout(async()=>{try{await manualSave();console.log('Auto-saved at:',new Date().toLocaleTimeString());}catch(error){console.error('Auto-save failed:',error);}},delay);// Cleanup function\nreturn()=>{if(timeoutRef.current){clearTimeout(timeoutRef.current);}};},[data,delay,enabled,manualSave]);// Cleanup on unmount\nuseEffect(()=>{return()=>{if(timeoutRef.current){clearTimeout(timeoutRef.current);}};},[]);return{save:manualSave,isSaving:isSavingRef.current,lastSaved:lastSavedTimeRef.current};};","map":{"version":3,"names":["useCallback","useEffect","useRef","useAutoSave","saveFunction","data","delay","arguments","length","undefined","enabled","timeoutRef","isSavingRef","lastSavedDataRef","lastSavedTimeRef","stableSaveFunction","manualSave","current","JSON","stringify","Date","error","console","currentDataString","clearTimeout","setTimeout","log","toLocaleTimeString","save","isSaving","lastSaved"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/Frontend/src/hooks/useAutoSave.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\r\n\r\n/**\r\n * Custom hook for debounced auto-save functionality\r\n * Prevents infinite loops by debouncing save operations and tracking save state\r\n * \r\n * @param {Function} saveFunction - Function to call for saving data\r\n * @param {*} data - Data to save (will trigger save when changed)\r\n * @param {number} delay - Debounce delay in milliseconds (default: 2000)\r\n * @param {boolean} enabled - Whether auto-save is enabled (default: true)\r\n * @returns {Object} - { save: manualSaveFunction, isSaving: boolean, lastSaved: Date }\r\n */\r\nexport const useAutoSave = (saveFunction, data, delay = 2000, enabled = true) => {\r\n    const timeoutRef = useRef(null);\r\n    const isSavingRef = useRef(false);\r\n    const lastSavedDataRef = useRef(null);\r\n    const lastSavedTimeRef = useRef(null);\r\n\r\n    // Create a stable save function that doesn't change on every render\r\n    const stableSaveFunction = useCallback(saveFunction, []);\r\n\r\n    // Manual save function that can be called immediately\r\n    const manualSave = useCallback(async () => {\r\n        if (isSavingRef.current) return;\r\n        \r\n        try {\r\n            isSavingRef.current = true;\r\n            await stableSaveFunction(data);\r\n            lastSavedDataRef.current = JSON.stringify(data);\r\n            lastSavedTimeRef.current = new Date();\r\n        } catch (error) {\r\n            console.error('Save failed:', error);\r\n            throw error;\r\n        } finally {\r\n            isSavingRef.current = false;\r\n        }\r\n    }, [data, stableSaveFunction]);\r\n\r\n    // Auto-save effect\r\n    useEffect(() => {\r\n        if (!enabled || !data) return;\r\n\r\n        // Don't auto-save if data hasn't changed\r\n        const currentDataString = JSON.stringify(data);\r\n        if (currentDataString === lastSavedDataRef.current) {\r\n            return;\r\n        }\r\n\r\n        // Don't auto-save if currently saving\r\n        if (isSavingRef.current) {\r\n            return;\r\n        }\r\n\r\n        // Clear existing timeout\r\n        if (timeoutRef.current) {\r\n            clearTimeout(timeoutRef.current);\r\n        }\r\n\r\n        // Set new timeout for debounced save\r\n        timeoutRef.current = setTimeout(async () => {\r\n            try {\r\n                await manualSave();\r\n                console.log('Auto-saved at:', new Date().toLocaleTimeString());\r\n            } catch (error) {\r\n                console.error('Auto-save failed:', error);\r\n            }\r\n        }, delay);\r\n\r\n        // Cleanup function\r\n        return () => {\r\n            if (timeoutRef.current) {\r\n                clearTimeout(timeoutRef.current);\r\n            }\r\n        };\r\n    }, [data, delay, enabled, manualSave]);\r\n\r\n    // Cleanup on unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (timeoutRef.current) {\r\n                clearTimeout(timeoutRef.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return {\r\n        save: manualSave,\r\n        isSaving: isSavingRef.current,\r\n        lastSaved: lastSavedTimeRef.current\r\n    };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}