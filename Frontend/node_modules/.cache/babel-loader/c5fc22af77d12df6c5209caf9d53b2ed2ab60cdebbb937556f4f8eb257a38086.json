{"ast":null,"code":"const BASE_URL = \"http://localhost:8000/api/tables\";\nexport default class TrainingLogManager {\n  async loadTable(id) {\n    const res = await fetch(`${BASE_URL}/${encodeURIComponent(id)}`);\n    if (!res.ok) return null;\n    return await res.json();\n  }\n  async saveTable(log) {\n    const res = await fetch(BASE_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(log)\n    });\n    if (!res.ok) throw new Error(\"Save failed\");\n    return await res.json();\n  }\n  async deleteTable(id) {\n    const res = await fetch(`${BASE_URL}/${encodeURIComponent(id)}`, {\n      method: \"DELETE\"\n    });\n    if (!res.ok) throw new Error(\"Delete failed\");\n    return true;\n  }\n  async listTables() {\n    const res = await fetch(BASE_URL);\n    if (!res.ok) return [];\n    return await res.json();\n  }\n  createNewTable() {\n    const id = crypto.randomUUID();\n    const today = new Date().toISOString().split(\"T\")[0];\n    return {\n      id,\n      tableName: `New Table - ${today}`,\n      date: today,\n      rows: [{\n        id: 0,\n        muscleGroup: \"Strength-Focus\\ud83c\\udfcb\\ufe0f\",\n        exercise: \"\",\n        sets: [{\n          reps: \"\",\n          weight: \"\"\n        }],\n        notes: \"No notes \\ud83d\\ude0a\",\n        showNotes: false,\n        weightUnit: \"lbs\"\n      }]\n    };\n  }\n}","map":{"version":3,"names":["BASE_URL","TrainingLogManager","loadTable","id","res","fetch","encodeURIComponent","ok","json","saveTable","log","method","headers","body","JSON","stringify","Error","deleteTable","listTables","createNewTable","crypto","randomUUID","today","Date","toISOString","split","tableName","date","rows","muscleGroup","exercise","sets","reps","weight","notes","showNotes","weightUnit"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/components/TrainingLogManager.jsx"],"sourcesContent":["const BASE_URL = \"http://localhost:8000/api/tables\";\r\n\r\nexport default class TrainingLogManager {\r\n  async loadTable(id) {\r\n    const res = await fetch(`${BASE_URL}/${encodeURIComponent(id)}`);\r\n    if (!res.ok) return null;\r\n    return await res.json();\r\n  }\r\n\r\n  async saveTable(log) {\r\n    const res = await fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(log),\r\n    });\r\n    if (!res.ok) throw new Error(\"Save failed\");\r\n    return await res.json();\r\n  }\r\n\r\n  async deleteTable(id) {\r\n    const res = await fetch(`${BASE_URL}/${encodeURIComponent(id)}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (!res.ok) throw new Error(\"Delete failed\");\r\n    return true;\r\n  }\r\n\r\n  async listTables() {\r\n    const res = await fetch(BASE_URL);\r\n    if (!res.ok) return [];\r\n    return await res.json();\r\n  }\r\n\r\n  createNewTable() {\r\n    const id = crypto.randomUUID();\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    return {\r\n      id,\r\n      tableName: `New Table - ${today}`,\r\n      date: today,\r\n      rows: [\r\n        {\r\n          id: 0,\r\n          muscleGroup: \"Strength-Focus\\ud83c\\udfcb\\ufe0f\",\r\n          exercise: \"\",\r\n          sets: [{ reps: \"\", weight: \"\" }],\r\n          notes: \"No notes \\ud83d\\ude0a\",\r\n          showNotes: false,\r\n          weightUnit: \"lbs\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC;AAEnD,eAAe,MAAMC,kBAAkB,CAAC;EACtC,MAAMC,SAASA,CAACC,EAAE,EAAE;IAClB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,IAAIM,kBAAkB,CAACH,EAAE,CAAC,EAAE,CAAC;IAChE,IAAI,CAACC,GAAG,CAACG,EAAE,EAAE,OAAO,IAAI;IACxB,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB;EAEA,MAAMC,SAASA,CAACC,GAAG,EAAE;IACnB,MAAMN,GAAG,GAAG,MAAMC,KAAK,CAACL,QAAQ,EAAE;MAChCW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,GAAG;IAC1B,CAAC,CAAC;IACF,IAAI,CAACN,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIS,KAAK,CAAC,aAAa,CAAC;IAC3C,OAAO,MAAMZ,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB;EAEA,MAAMS,WAAWA,CAACd,EAAE,EAAE;IACpB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,IAAIM,kBAAkB,CAACH,EAAE,CAAC,EAAE,EAAE;MAC/DQ,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAI,CAACP,GAAG,CAACG,EAAE,EAAE,MAAM,IAAIS,KAAK,CAAC,eAAe,CAAC;IAC7C,OAAO,IAAI;EACb;EAEA,MAAME,UAAUA,CAAA,EAAG;IACjB,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAACL,QAAQ,CAAC;IACjC,IAAI,CAACI,GAAG,CAACG,EAAE,EAAE,OAAO,EAAE;IACtB,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB;EAEAW,cAAcA,CAAA,EAAG;IACf,MAAMhB,EAAE,GAAGiB,MAAM,CAACC,UAAU,CAAC,CAAC;IAC9B,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,OAAO;MACLtB,EAAE;MACFuB,SAAS,EAAE,eAAeJ,KAAK,EAAE;MACjCK,IAAI,EAAEL,KAAK;MACXM,IAAI,EAAE,CACJ;QACEzB,EAAE,EAAE,CAAC;QACL0B,WAAW,EAAE,kCAAkC;QAC/CC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAC,CAAC;QAChCC,KAAK,EAAE,uBAAuB;QAC9BC,SAAS,EAAE,KAAK;QAChBC,UAAU,EAAE;MACd,CAAC;IAEL,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}