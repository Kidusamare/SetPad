{"ast":null,"code":"export default class TrainingLogManager{constructor(token){this.token=token;this.BASE_URL=import.meta.env.VITE_BACKEND_URL+\"/api/tables\";}async loadTable(id){const res=await fetch(\"\".concat(this.BASE_URL,\"/\").concat(encodeURIComponent(id)),{headers:{Authorization:\"Bearer \".concat(this.token)}});if(!res.ok)throw new Error(\"Failed to load\");return await res.json();}async saveTable(data){const res=await fetch(this.BASE_URL,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",Authorization:\"Bearer \".concat(this.token)},body:JSON.stringify(data)});if(!res.ok)throw new Error(\"Save failed\");return await res.json();}async deleteTable(id){const res=await fetch(\"\".concat(this.BASE_URL,\"/\").concat(encodeURIComponent(id)),{method:\"DELETE\",headers:{Authorization:\"Bearer \".concat(this.token)}});if(!res.ok)throw new Error(\"Delete failed\");return true;}async listTables(){const res=await fetch(this.BASE_URL,{headers:{Authorization:\"Bearer \".concat(this.token)}});if(!res.ok)throw new Error(\"Failed to fetch tables\");return await res.json();}createNewTable(){const id=crypto.randomUUID();const today=new Date().toISOString().split(\"T\")[0];return{id,tableName:\"New Table - \".concat(today),date:today,rows:[{id:0,muscleGroup:\"\",exercise:\"\",sets:[{reps:\"\",weight:\"\"}],notes:\"\",showNotes:false,weightUnit:\"lbs\"}]};}}","map":{"version":3,"names":["TrainingLogManager","constructor","token","BASE_URL","import","meta","env","VITE_BACKEND_URL","loadTable","id","res","fetch","concat","encodeURIComponent","headers","Authorization","ok","Error","json","saveTable","data","method","body","JSON","stringify","deleteTable","listTables","createNewTable","crypto","randomUUID","today","Date","toISOString","split","tableName","date","rows","muscleGroup","exercise","sets","reps","weight","notes","showNotes","weightUnit"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/components/TrainingLogManager.jsx"],"sourcesContent":["export default class TrainingLogManager {\r\n    constructor(token) {\r\n        this.token = token;\r\n        this.BASE_URL = import.meta.env.VITE_BACKEND_URL + \"/api/tables\"; \r\n    }\r\n\r\n    async loadTable(id) {\r\n        const res = await fetch(`${this.BASE_URL}/${encodeURIComponent(id)}`, {\r\n            headers: { Authorization: `Bearer ${this.token}` }\r\n        });\r\n        if (!res.ok) throw new Error(\"Failed to load\");\r\n        return await res.json();\r\n    }\r\n\r\n    async saveTable(data) {\r\n        const res = await fetch(this.BASE_URL, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${this.token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n        if (!res.ok) throw new Error(\"Save failed\");\r\n        return await res.json();\r\n    }\r\n\r\n    async deleteTable(id) {\r\n        const res = await fetch(`${this.BASE_URL}/${encodeURIComponent(id)}`, {\r\n            method: \"DELETE\",\r\n            headers: { Authorization: `Bearer ${this.token}` }\r\n        });\r\n        if (!res.ok) throw new Error(\"Delete failed\");\r\n        return true;\r\n    }\r\n\r\n    async listTables() {\r\n        const res = await fetch(this.BASE_URL, {\r\n            headers: { Authorization: `Bearer ${this.token}` }\r\n        });\r\n        if (!res.ok) throw new Error(\"Failed to fetch tables\");\r\n        return await res.json();\r\n    }\r\n\r\n    createNewTable() {\r\n        const id = crypto.randomUUID();\r\n        const today = new Date().toISOString().split(\"T\")[0];\r\n        return {\r\n            id,\r\n            tableName: `New Table - ${today}`,\r\n            date: today,\r\n            rows: [\r\n                {\r\n                    id: 0,\r\n                    muscleGroup: \"\",\r\n                    exercise: \"\",\r\n                    sets: [{ reps: \"\", weight: \"\" }],\r\n                    notes: \"\",\r\n                    showNotes: false,\r\n                    weightUnit: \"lbs\",\r\n                },\r\n            ],\r\n        };\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}