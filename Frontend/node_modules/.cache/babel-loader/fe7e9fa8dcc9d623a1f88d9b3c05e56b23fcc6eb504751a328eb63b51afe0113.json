{"ast":null,"code":"import _objectSpread from\"C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Workout Templates Service\n// Handles both predefined and user-created workout templates\nexport const WORKOUT_TEMPLATES={'push-day':{name:'Push Day',description:'Chest, Shoulders, and Triceps workout',exercises:[{muscleGroup:'Chest',exercise:'Bench Press',sets:[{reps:'8-10',weight:''},{reps:'8-10',weight:''},{reps:'8-10',weight:''}],notes:'Focus on controlled movement'},{muscleGroup:'Chest',exercise:'Incline Dumbbell Press',sets:[{reps:'10-12',weight:''},{reps:'10-12',weight:''},{reps:'10-12',weight:''}],notes:'45-degree incline'},{muscleGroup:'Shoulders',exercise:'Overhead Press',sets:[{reps:'8-10',weight:''},{reps:'8-10',weight:''},{reps:'8-10',weight:''}],notes:'Keep core tight'},{muscleGroup:'Shoulders',exercise:'Lateral Raises',sets:[{reps:'12-15',weight:''},{reps:'12-15',weight:''},{reps:'12-15',weight:''}],notes:'Control the negative'},{muscleGroup:'Triceps',exercise:'Tricep Dips',sets:[{reps:'10-12',weight:''},{reps:'10-12',weight:''},{reps:'10-12',weight:''}],notes:'Full range of motion'}]},'pull-day':{name:'Pull Day',description:'Back and Biceps workout',exercises:[{muscleGroup:'Back',exercise:'Pull-ups',sets:[{reps:'6-8',weight:''},{reps:'6-8',weight:''},{reps:'6-8',weight:''}],notes:'Use assistance if needed'},{muscleGroup:'Back',exercise:'Bent-over Rows',sets:[{reps:'8-10',weight:''},{reps:'8-10',weight:''},{reps:'8-10',weight:''}],notes:'Squeeze shoulder blades'},{muscleGroup:'Back',exercise:'Lat Pulldowns',sets:[{reps:'10-12',weight:''},{reps:'10-12',weight:''},{reps:'10-12',weight:''}],notes:'Pull to upper chest'},{muscleGroup:'Biceps',exercise:'Barbell Curls',sets:[{reps:'10-12',weight:''},{reps:'10-12',weight:''},{reps:'10-12',weight:''}],notes:'No swinging'},{muscleGroup:'Biceps',exercise:'Hammer Curls',sets:[{reps:'12-15',weight:''},{reps:'12-15',weight:''},{reps:'12-15',weight:''}],notes:'Neutral grip'}]},'leg-day':{name:'Leg Day',description:'Comprehensive lower body workout',exercises:[{muscleGroup:'Legs',exercise:'Squats',sets:[{reps:'8-10',weight:''},{reps:'8-10',weight:''},{reps:'8-10',weight:''},{reps:'8-10',weight:''}],notes:'Go below parallel'},{muscleGroup:'Legs',exercise:'Romanian Deadlifts',sets:[{reps:'8-10',weight:''},{reps:'8-10',weight:''},{reps:'8-10',weight:''}],notes:'Hinge at hips'},{muscleGroup:'Legs',exercise:'Leg Press',sets:[{reps:'12-15',weight:''},{reps:'12-15',weight:''},{reps:'12-15',weight:''}],notes:'Full range of motion'},{muscleGroup:'Legs',exercise:'Walking Lunges',sets:[{reps:'10-12 each leg',weight:''},{reps:'10-12 each leg',weight:''},{reps:'10-12 each leg',weight:''}],notes:'Step out wide'},{muscleGroup:'Calves',exercise:'Calf Raises',sets:[{reps:'15-20',weight:''},{reps:'15-20',weight:''},{reps:'15-20',weight:''}],notes:'Pause at the top'}]},'upper-body':{name:'Upper Body',description:'Complete upper body workout',exercises:[{muscleGroup:'Chest',exercise:'Push-ups',sets:[{reps:'10-15',weight:''},{reps:'10-15',weight:''},{reps:'10-15',weight:''}],notes:'Modify as needed'},{muscleGroup:'Back',exercise:'Inverted Rows',sets:[{reps:'8-12',weight:''},{reps:'8-12',weight:''},{reps:'8-12',weight:''}],notes:'Body straight'},{muscleGroup:'Shoulders',exercise:'Pike Push-ups',sets:[{reps:'6-10',weight:''},{reps:'6-10',weight:''},{reps:'6-10',weight:''}],notes:'Hands shoulder-width apart'},{muscleGroup:'Arms',exercise:'Diamond Push-ups',sets:[{reps:'5-8',weight:''},{reps:'5-8',weight:''}],notes:'Targets triceps'}]},'cardio-strength':{name:'Cardio + Strength',description:'High-intensity circuit training',exercises:[{muscleGroup:'Full Body',exercise:'Burpees',sets:[{reps:'10-15',weight:''},{reps:'10-15',weight:''},{reps:'10-15',weight:''}],notes:'30 sec rest between sets'},{muscleGroup:'Legs',exercise:'Jump Squats',sets:[{reps:'15-20',weight:''},{reps:'15-20',weight:''},{reps:'15-20',weight:''}],notes:'Land softly'},{muscleGroup:'Core',exercise:'Mountain Climbers',sets:[{reps:'20-30',weight:''},{reps:'20-30',weight:''},{reps:'20-30',weight:''}],notes:'Keep hips level'},{muscleGroup:'Full Body',exercise:'Kettlebell Swings',sets:[{reps:'15-20',weight:''},{reps:'15-20',weight:''},{reps:'15-20',weight:''}],notes:'Hip drive, not arms'}]},'beginner-full-body':{name:'Beginner Full Body',description:'Perfect for those starting their fitness journey',exercises:[{muscleGroup:'Legs',exercise:'Bodyweight Squats',sets:[{reps:'10-15',weight:''},{reps:'10-15',weight:''}],notes:'Focus on form'},{muscleGroup:'Chest',exercise:'Modified Push-ups',sets:[{reps:'5-10',weight:''},{reps:'5-10',weight:''}],notes:'Knees down if needed'},{muscleGroup:'Core',exercise:'Plank',sets:[{reps:'20-30 seconds',weight:''},{reps:'20-30 seconds',weight:''}],notes:'Keep body straight'},{muscleGroup:'Legs',exercise:'Glute Bridges',sets:[{reps:'10-15',weight:''},{reps:'10-15',weight:''}],notes:'Squeeze glutes at top'}]}};// Function to get template by ID\nexport const getWorkoutTemplate=templateId=>{return WORKOUT_TEMPLATES[templateId]||null;};// Function to get all template names for display\nexport const getTemplateList=()=>{return Object.keys(WORKOUT_TEMPLATES).map(key=>({id:key,name:WORKOUT_TEMPLATES[key].name,description:WORKOUT_TEMPLATES[key].description,exerciseCount:WORKOUT_TEMPLATES[key].exercises.length}));};// Function to apply template to a workout log\nexport const applyTemplateToLog=(templateId,currentLog)=>{const template=getWorkoutTemplate(templateId);if(!template)return currentLog;// Convert template exercises to log rows\nconst templateRows=template.exercises.map((exercise,index)=>({id:index,muscleGroup:exercise.muscleGroup,exercise:exercise.exercise,sets:exercise.sets.map(set=>({reps:set.reps,weight:set.weight})),notes:exercise.notes||'',showNotes:!!exercise.notes,weightUnit:'lbs'}));return _objectSpread(_objectSpread({},currentLog),{},{tableName:template.name,rows:templateRows});};// Function to create smart defaults based on user history\nexport const getSmartDefaults=async function(exercise){var _recentEntry$sets,_recentEntry$sets$,_recentEntry$sets2,_recentEntry$sets2$;let userHistory=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];// Filter history for the specific exercise\nconst exerciseHistory=userHistory.filter(entry=>{var _entry$exercise;return((_entry$exercise=entry.exercise)===null||_entry$exercise===void 0?void 0:_entry$exercise.toLowerCase())===(exercise===null||exercise===void 0?void 0:exercise.toLowerCase());});if(exerciseHistory.length===0){return{sets:[{reps:'',weight:''}],suggestedReps:'',suggestedWeight:''};}// Get the most recent entry for this exercise\nconst recentEntry=exerciseHistory[exerciseHistory.length-1];// Calculate suggested progression (small increase in weight or reps)\nconst lastWeight=parseFloat((_recentEntry$sets=recentEntry.sets)===null||_recentEntry$sets===void 0?void 0:(_recentEntry$sets$=_recentEntry$sets[0])===null||_recentEntry$sets$===void 0?void 0:_recentEntry$sets$.weight)||0;const lastReps=parseInt((_recentEntry$sets2=recentEntry.sets)===null||_recentEntry$sets2===void 0?void 0:(_recentEntry$sets2$=_recentEntry$sets2[0])===null||_recentEntry$sets2$===void 0?void 0:_recentEntry$sets2$.reps)||0;const suggestedWeight=lastWeight>0?(lastWeight+2.5).toString():'';const suggestedReps=lastReps>0?lastReps.toString():'';return{sets:recentEntry.sets||[{reps:'',weight:''}],suggestedReps,suggestedWeight,lastPerformed:recentEntry.date,progressionNote:lastWeight>0?\"Last time: \".concat(lastWeight,\"lbs\"):''};};// Custom Template Management\nconst CUSTOM_TEMPLATES_KEY='fitness_custom_templates';// Function to save a workout as a custom template\nexport const saveWorkoutAsTemplate=async function(workout,templateName){let description=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'';try{// Get existing custom templates\nconst existingTemplates=getCustomTemplates();// Create template ID from name\nconst templateId=templateName.toLowerCase().replace(/[^a-z0-9]/g,'-');// Convert workout to template format\nconst template={id:templateId,name:templateName,description:description||\"Custom template created from \".concat(workout.tableName),isCustom:true,createdDate:new Date().toISOString(),exercises:workout.rows.map(row=>({muscleGroup:row.muscleGroup||'',exercise:row.exercise||'',sets:row.sets.map(set=>({reps:set.reps||'',weight:''// Don't save weights in templates\n})),notes:row.notes||''})).filter(exercise=>exercise.exercise)// Only include rows with exercises\n};// Save to localStorage\nconst updatedTemplates=_objectSpread(_objectSpread({},existingTemplates),{},{[templateId]:template});localStorage.setItem(CUSTOM_TEMPLATES_KEY,JSON.stringify(updatedTemplates));return{success:true,templateId,message:\"Template \\\"\".concat(templateName,\"\\\" saved successfully!\")};}catch(error){console.error('Error saving custom template:',error);return{success:false,message:'Failed to save template. Please try again.'};}};// Function to get all custom templates\nexport const getCustomTemplates=()=>{try{const stored=localStorage.getItem(CUSTOM_TEMPLATES_KEY);return stored?JSON.parse(stored):{};}catch(error){console.error('Error loading custom templates:',error);return{};}};// Function to get all templates (predefined + custom)\nexport const getAllTemplates=()=>{const predefined=getTemplateList();const custom=getCustomTemplates();const customList=Object.values(custom).map(template=>({id:template.id,name:template.name,description:template.description,exerciseCount:template.exercises.length,isCustom:true,createdDate:template.createdDate}));return[...predefined,...customList];};// Function to get a template (predefined or custom)\nexport const getTemplate=templateId=>{// Check predefined templates first\nconst predefined=getWorkoutTemplate(templateId);if(predefined)return predefined;// Check custom templates\nconst customTemplates=getCustomTemplates();return customTemplates[templateId]||null;};// Function to delete a custom template\nexport const deleteCustomTemplate=templateId=>{try{const templates=getCustomTemplates();if(templates[templateId]){delete templates[templateId];localStorage.setItem(CUSTOM_TEMPLATES_KEY,JSON.stringify(templates));return{success:true,message:'Template deleted successfully!'};}return{success:false,message:'Template not found.'};}catch(error){console.error('Error deleting template:',error);return{success:false,message:'Failed to delete template.'};}};// Function to apply any template (predefined or custom) to a workout log\nexport const applyAnyTemplateToLog=(templateId,currentLog)=>{const template=getTemplate(templateId);if(!template)return currentLog;// Convert template exercises to log rows\nconst templateRows=template.exercises.map((exercise,index)=>({id:index,muscleGroup:exercise.muscleGroup,exercise:exercise.exercise,sets:exercise.sets.map(set=>({reps:set.reps,weight:set.weight})),notes:exercise.notes||'',showNotes:!!exercise.notes,weightUnit:'lbs'}));return _objectSpread(_objectSpread({},currentLog),{},{tableName:template.name,rows:templateRows});};","map":{"version":3,"names":["WORKOUT_TEMPLATES","name","description","exercises","muscleGroup","exercise","sets","reps","weight","notes","getWorkoutTemplate","templateId","getTemplateList","Object","keys","map","key","id","exerciseCount","length","applyTemplateToLog","currentLog","template","templateRows","index","set","showNotes","weightUnit","_objectSpread","tableName","rows","getSmartDefaults","_recentEntry$sets","_recentEntry$sets$","_recentEntry$sets2","_recentEntry$sets2$","userHistory","arguments","undefined","exerciseHistory","filter","entry","_entry$exercise","toLowerCase","suggestedReps","suggestedWeight","recentEntry","lastWeight","parseFloat","lastReps","parseInt","toString","lastPerformed","date","progressionNote","concat","CUSTOM_TEMPLATES_KEY","saveWorkoutAsTemplate","workout","templateName","existingTemplates","getCustomTemplates","replace","isCustom","createdDate","Date","toISOString","row","updatedTemplates","localStorage","setItem","JSON","stringify","success","message","error","console","stored","getItem","parse","getAllTemplates","predefined","custom","customList","values","getTemplate","customTemplates","deleteCustomTemplate","templates","applyAnyTemplateToLog"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/Frontend/src/services/workoutTemplates.js"],"sourcesContent":["// Workout Templates Service\r\n// Handles both predefined and user-created workout templates\r\nexport const WORKOUT_TEMPLATES = {\r\n  'push-day': {\r\n    name: 'Push Day',\r\n    description: 'Chest, Shoulders, and Triceps workout',\r\n    exercises: [\r\n      {\r\n        muscleGroup: 'Chest',\r\n        exercise: 'Bench Press',\r\n        sets: [\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' }\r\n        ],\r\n        notes: 'Focus on controlled movement'\r\n      },\r\n      {\r\n        muscleGroup: 'Chest',\r\n        exercise: 'Incline Dumbbell Press',\r\n        sets: [\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' }\r\n        ],\r\n        notes: '45-degree incline'\r\n      },\r\n      {\r\n        muscleGroup: 'Shoulders',\r\n        exercise: 'Overhead Press',\r\n        sets: [\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' }\r\n        ],\r\n        notes: 'Keep core tight'\r\n      },\r\n      {\r\n        muscleGroup: 'Shoulders',\r\n        exercise: 'Lateral Raises',\r\n        sets: [\r\n          { reps: '12-15', weight: '' },\r\n          { reps: '12-15', weight: '' },\r\n          { reps: '12-15', weight: '' }\r\n        ],\r\n        notes: 'Control the negative'\r\n      },\r\n      {\r\n        muscleGroup: 'Triceps',\r\n        exercise: 'Tricep Dips',\r\n        sets: [\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' }\r\n        ],\r\n        notes: 'Full range of motion'\r\n      }\r\n    ]\r\n  },\r\n  \r\n  'pull-day': {\r\n    name: 'Pull Day',\r\n    description: 'Back and Biceps workout',\r\n    exercises: [\r\n      {\r\n        muscleGroup: 'Back',\r\n        exercise: 'Pull-ups',\r\n        sets: [\r\n          { reps: '6-8', weight: '' },\r\n          { reps: '6-8', weight: '' },\r\n          { reps: '6-8', weight: '' }\r\n        ],\r\n        notes: 'Use assistance if needed'\r\n      },\r\n      {\r\n        muscleGroup: 'Back',\r\n        exercise: 'Bent-over Rows',\r\n        sets: [\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' }\r\n        ],\r\n        notes: 'Squeeze shoulder blades'\r\n      },\r\n      {\r\n        muscleGroup: 'Back',\r\n        exercise: 'Lat Pulldowns',\r\n        sets: [\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' }\r\n        ],\r\n        notes: 'Pull to upper chest'\r\n      },\r\n      {\r\n        muscleGroup: 'Biceps',\r\n        exercise: 'Barbell Curls',\r\n        sets: [\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' },\r\n          { reps: '10-12', weight: '' }\r\n        ],\r\n        notes: 'No swinging'\r\n      },\r\n      {\r\n        muscleGroup: 'Biceps',\r\n        exercise: 'Hammer Curls',\r\n        sets: [\r\n          { reps: '12-15', weight: '' },\r\n          { reps: '12-15', weight: '' },\r\n          { reps: '12-15', weight: '' }\r\n        ],\r\n        notes: 'Neutral grip'\r\n      }\r\n    ]\r\n  },\r\n  \r\n  'leg-day': {\r\n    name: 'Leg Day',\r\n    description: 'Comprehensive lower body workout',\r\n    exercises: [\r\n      {\r\n        muscleGroup: 'Legs',\r\n        exercise: 'Squats',\r\n        sets: [\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' }\r\n        ],\r\n        notes: 'Go below parallel'\r\n      },\r\n      {\r\n        muscleGroup: 'Legs',\r\n        exercise: 'Romanian Deadlifts',\r\n        sets: [\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' },\r\n          { reps: '8-10', weight: '' }\r\n        ],\r\n        notes: 'Hinge at hips'\r\n      },\r\n      {\r\n        muscleGroup: 'Legs',\r\n        exercise: 'Leg Press',\r\n        sets: [\r\n          { reps: '12-15', weight: '' },\r\n          { reps: '12-15', weight: '' },\r\n          { reps: '12-15', weight: '' }\r\n        ],\r\n        notes: 'Full range of motion'\r\n      },\r\n      {\r\n        muscleGroup: 'Legs',\r\n        exercise: 'Walking Lunges',\r\n        sets: [\r\n          { reps: '10-12 each leg', weight: '' },\r\n          { reps: '10-12 each leg', weight: '' },\r\n          { reps: '10-12 each leg', weight: '' }\r\n        ],\r\n        notes: 'Step out wide'\r\n      },\r\n      {\r\n        muscleGroup: 'Calves',\r\n        exercise: 'Calf Raises',\r\n        sets: [\r\n          { reps: '15-20', weight: '' },\r\n          { reps: '15-20', weight: '' },\r\n          { reps: '15-20', weight: '' }\r\n        ],\r\n        notes: 'Pause at the top'\r\n      }\r\n    ]\r\n  },\r\n  \r\n  'upper-body': {\r\n    name: 'Upper Body',\r\n    description: 'Complete upper body workout',\r\n    exercises: [\r\n      {\r\n        muscleGroup: 'Chest',\r\n        exercise: 'Push-ups',\r\n        sets: [\r\n          { reps: '10-15', weight: '' },\r\n          { reps: '10-15', weight: '' },\r\n          { reps: '10-15', weight: '' }\r\n        ],\r\n        notes: 'Modify as needed'\r\n      },\r\n      {\r\n        muscleGroup: 'Back',\r\n        exercise: 'Inverted Rows',\r\n        sets: [\r\n          { reps: '8-12', weight: '' },\r\n          { reps: '8-12', weight: '' },\r\n          { reps: '8-12', weight: '' }\r\n        ],\r\n        notes: 'Body straight'\r\n      },\r\n      {\r\n        muscleGroup: 'Shoulders',\r\n        exercise: 'Pike Push-ups',\r\n        sets: [\r\n          { reps: '6-10', weight: '' },\r\n          { reps: '6-10', weight: '' },\r\n          { reps: '6-10', weight: '' }\r\n        ],\r\n        notes: 'Hands shoulder-width apart'\r\n      },\r\n      {\r\n        muscleGroup: 'Arms',\r\n        exercise: 'Diamond Push-ups',\r\n        sets: [\r\n          { reps: '5-8', weight: '' },\r\n          { reps: '5-8', weight: '' },\r\n        ],\r\n        notes: 'Targets triceps'\r\n      }\r\n    ]\r\n  },\r\n  \r\n  'cardio-strength': {\r\n    name: 'Cardio + Strength',\r\n    description: 'High-intensity circuit training',\r\n    exercises: [\r\n      {\r\n        muscleGroup: 'Full Body',\r\n        exercise: 'Burpees',\r\n        sets: [\r\n          { reps: '10-15', weight: '' },\r\n          { reps: '10-15', weight: '' },\r\n          { reps: '10-15', weight: '' }\r\n        ],\r\n        notes: '30 sec rest between sets'\r\n      },\r\n      {\r\n        muscleGroup: 'Legs',\r\n        exercise: 'Jump Squats',\r\n        sets: [\r\n          { reps: '15-20', weight: '' },\r\n          { reps: '15-20', weight: '' },\r\n          { reps: '15-20', weight: '' }\r\n        ],\r\n        notes: 'Land softly'\r\n      },\r\n      {\r\n        muscleGroup: 'Core',\r\n        exercise: 'Mountain Climbers',\r\n        sets: [\r\n          { reps: '20-30', weight: '' },\r\n          { reps: '20-30', weight: '' },\r\n          { reps: '20-30', weight: '' }\r\n        ],\r\n        notes: 'Keep hips level'\r\n      },\r\n      {\r\n        muscleGroup: 'Full Body',\r\n        exercise: 'Kettlebell Swings',\r\n        sets: [\r\n          { reps: '15-20', weight: '' },\r\n          { reps: '15-20', weight: '' },\r\n          { reps: '15-20', weight: '' }\r\n        ],\r\n        notes: 'Hip drive, not arms'\r\n      }\r\n    ]\r\n  },\r\n  \r\n  'beginner-full-body': {\r\n    name: 'Beginner Full Body',\r\n    description: 'Perfect for those starting their fitness journey',\r\n    exercises: [\r\n      {\r\n        muscleGroup: 'Legs',\r\n        exercise: 'Bodyweight Squats',\r\n        sets: [\r\n          { reps: '10-15', weight: '' },\r\n          { reps: '10-15', weight: '' }\r\n        ],\r\n        notes: 'Focus on form'\r\n      },\r\n      {\r\n        muscleGroup: 'Chest',\r\n        exercise: 'Modified Push-ups',\r\n        sets: [\r\n          { reps: '5-10', weight: '' },\r\n          { reps: '5-10', weight: '' }\r\n        ],\r\n        notes: 'Knees down if needed'\r\n      },\r\n      {\r\n        muscleGroup: 'Core',\r\n        exercise: 'Plank',\r\n        sets: [\r\n          { reps: '20-30 seconds', weight: '' },\r\n          { reps: '20-30 seconds', weight: '' }\r\n        ],\r\n        notes: 'Keep body straight'\r\n      },\r\n      {\r\n        muscleGroup: 'Legs',\r\n        exercise: 'Glute Bridges',\r\n        sets: [\r\n          { reps: '10-15', weight: '' },\r\n          { reps: '10-15', weight: '' }\r\n        ],\r\n        notes: 'Squeeze glutes at top'\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n// Function to get template by ID\r\nexport const getWorkoutTemplate = (templateId) => {\r\n  return WORKOUT_TEMPLATES[templateId] || null;\r\n};\r\n\r\n// Function to get all template names for display\r\nexport const getTemplateList = () => {\r\n  return Object.keys(WORKOUT_TEMPLATES).map(key => ({\r\n    id: key,\r\n    name: WORKOUT_TEMPLATES[key].name,\r\n    description: WORKOUT_TEMPLATES[key].description,\r\n    exerciseCount: WORKOUT_TEMPLATES[key].exercises.length\r\n  }));\r\n};\r\n\r\n// Function to apply template to a workout log\r\nexport const applyTemplateToLog = (templateId, currentLog) => {\r\n  const template = getWorkoutTemplate(templateId);\r\n  if (!template) return currentLog;\r\n  \r\n  // Convert template exercises to log rows\r\n  const templateRows = template.exercises.map((exercise, index) => ({\r\n    id: index,\r\n    muscleGroup: exercise.muscleGroup,\r\n    exercise: exercise.exercise,\r\n    sets: exercise.sets.map(set => ({\r\n      reps: set.reps,\r\n      weight: set.weight\r\n    })),\r\n    notes: exercise.notes || '',\r\n    showNotes: !!exercise.notes,\r\n    weightUnit: 'lbs'\r\n  }));\r\n  \r\n  return {\r\n    ...currentLog,\r\n    tableName: template.name,\r\n    rows: templateRows\r\n  };\r\n};\r\n\r\n// Function to create smart defaults based on user history\r\nexport const getSmartDefaults = async (exercise, userHistory = []) => {\r\n  // Filter history for the specific exercise\r\n  const exerciseHistory = userHistory.filter(\r\n    entry => entry.exercise?.toLowerCase() === exercise?.toLowerCase()\r\n  );\r\n  \r\n  if (exerciseHistory.length === 0) {\r\n    return {\r\n      sets: [{ reps: '', weight: '' }],\r\n      suggestedReps: '',\r\n      suggestedWeight: ''\r\n    };\r\n  }\r\n  \r\n  // Get the most recent entry for this exercise\r\n  const recentEntry = exerciseHistory[exerciseHistory.length - 1];\r\n  \r\n  // Calculate suggested progression (small increase in weight or reps)\r\n  const lastWeight = parseFloat(recentEntry.sets?.[0]?.weight) || 0;\r\n  const lastReps = parseInt(recentEntry.sets?.[0]?.reps) || 0;\r\n  \r\n  const suggestedWeight = lastWeight > 0 ? (lastWeight + 2.5).toString() : '';\r\n  const suggestedReps = lastReps > 0 ? lastReps.toString() : '';\r\n  \r\n  return {\r\n    sets: recentEntry.sets || [{ reps: '', weight: '' }],\r\n    suggestedReps,\r\n    suggestedWeight,\r\n    lastPerformed: recentEntry.date,\r\n    progressionNote: lastWeight > 0 ? `Last time: ${lastWeight}lbs` : ''\r\n  };\r\n};\r\n\r\n// Custom Template Management\r\nconst CUSTOM_TEMPLATES_KEY = 'fitness_custom_templates';\r\n\r\n// Function to save a workout as a custom template\r\nexport const saveWorkoutAsTemplate = async (workout, templateName, description = '') => {\r\n  try {\r\n    // Get existing custom templates\r\n    const existingTemplates = getCustomTemplates();\r\n    \r\n    // Create template ID from name\r\n    const templateId = templateName.toLowerCase().replace(/[^a-z0-9]/g, '-');\r\n    \r\n    // Convert workout to template format\r\n    const template = {\r\n      id: templateId,\r\n      name: templateName,\r\n      description: description || `Custom template created from ${workout.tableName}`,\r\n      isCustom: true,\r\n      createdDate: new Date().toISOString(),\r\n      exercises: workout.rows.map(row => ({\r\n        muscleGroup: row.muscleGroup || '',\r\n        exercise: row.exercise || '',\r\n        sets: row.sets.map(set => ({\r\n          reps: set.reps || '',\r\n          weight: '' // Don't save weights in templates\r\n        })),\r\n        notes: row.notes || ''\r\n      })).filter(exercise => exercise.exercise) // Only include rows with exercises\r\n    };\r\n    \r\n    // Save to localStorage\r\n    const updatedTemplates = {\r\n      ...existingTemplates,\r\n      [templateId]: template\r\n    };\r\n    \r\n    localStorage.setItem(CUSTOM_TEMPLATES_KEY, JSON.stringify(updatedTemplates));\r\n    \r\n    return {\r\n      success: true,\r\n      templateId,\r\n      message: `Template \"${templateName}\" saved successfully!`\r\n    };\r\n  } catch (error) {\r\n    console.error('Error saving custom template:', error);\r\n    return {\r\n      success: false,\r\n      message: 'Failed to save template. Please try again.'\r\n    };\r\n  }\r\n};\r\n\r\n// Function to get all custom templates\r\nexport const getCustomTemplates = () => {\r\n  try {\r\n    const stored = localStorage.getItem(CUSTOM_TEMPLATES_KEY);\r\n    return stored ? JSON.parse(stored) : {};\r\n  } catch (error) {\r\n    console.error('Error loading custom templates:', error);\r\n    return {};\r\n  }\r\n};\r\n\r\n// Function to get all templates (predefined + custom)\r\nexport const getAllTemplates = () => {\r\n  const predefined = getTemplateList();\r\n  const custom = getCustomTemplates();\r\n  \r\n  const customList = Object.values(custom).map(template => ({\r\n    id: template.id,\r\n    name: template.name,\r\n    description: template.description,\r\n    exerciseCount: template.exercises.length,\r\n    isCustom: true,\r\n    createdDate: template.createdDate\r\n  }));\r\n  \r\n  return [...predefined, ...customList];\r\n};\r\n\r\n// Function to get a template (predefined or custom)\r\nexport const getTemplate = (templateId) => {\r\n  // Check predefined templates first\r\n  const predefined = getWorkoutTemplate(templateId);\r\n  if (predefined) return predefined;\r\n  \r\n  // Check custom templates\r\n  const customTemplates = getCustomTemplates();\r\n  return customTemplates[templateId] || null;\r\n};\r\n\r\n// Function to delete a custom template\r\nexport const deleteCustomTemplate = (templateId) => {\r\n  try {\r\n    const templates = getCustomTemplates();\r\n    if (templates[templateId]) {\r\n      delete templates[templateId];\r\n      localStorage.setItem(CUSTOM_TEMPLATES_KEY, JSON.stringify(templates));\r\n      return { success: true, message: 'Template deleted successfully!' };\r\n    }\r\n    return { success: false, message: 'Template not found.' };\r\n  } catch (error) {\r\n    console.error('Error deleting template:', error);\r\n    return { success: false, message: 'Failed to delete template.' };\r\n  }\r\n};\r\n\r\n// Function to apply any template (predefined or custom) to a workout log\r\nexport const applyAnyTemplateToLog = (templateId, currentLog) => {\r\n  const template = getTemplate(templateId);\r\n  if (!template) return currentLog;\r\n  \r\n  // Convert template exercises to log rows\r\n  const templateRows = template.exercises.map((exercise, index) => ({\r\n    id: index,\r\n    muscleGroup: exercise.muscleGroup,\r\n    exercise: exercise.exercise,\r\n    sets: exercise.sets.map(set => ({\r\n      reps: set.reps,\r\n      weight: set.weight\r\n    })),\r\n    notes: exercise.notes || '',\r\n    showNotes: !!exercise.notes,\r\n    weightUnit: 'lbs'\r\n  }));\r\n  \r\n  return {\r\n    ...currentLog,\r\n    tableName: template.name,\r\n    rows: templateRows\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}