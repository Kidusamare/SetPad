{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidus\\\\OneDrive\\\\Documentos\\\\Summer2025\\\\fitness-tracker-frontend\\\\src\\\\components\\\\TrainingLogTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport TrainingLogManager from \"./TrainingLogManager\";\nimport TrainingLogRow from \"./TrainingLogRow\";\nimport { useAutoSave } from \"../hooks/useAutoSave\";\nimport { useFormKeyboardNavigation } from \"../hooks/useKeyboardShortcuts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst manager = new TrainingLogManager();\nexport default function TrainingLogTable() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    theme\n  } = useTheme();\n  const [log, setLog] = useState(null);\n  const [muscleGroupSuggestions, setMuscleGroupSuggestions] = useState([]);\n  const [exerciseSuggestions, setExerciseSuggestions] = useState([]);\n  const [currentMuscleGroup, setCurrentMuscleGroup] = useState(\"\");\n  const [showBackButton, setShowBackButton] = useState(true);\n  const [lastScrollY, setLastScrollY] = useState(0);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [saveStatus, setSaveStatus] = useState('');\n  const [lastSaveTime, setLastSaveTime] = useState(null);\n\n  // Window resize detection\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      // Show button if at top of page or scrolling up\n      const isAtTop = currentScrollY < 50;\n      const isScrollingUp = currentScrollY < lastScrollY;\n      setShowBackButton(isAtTop || isScrollingUp);\n      setLastScrollY(currentScrollY);\n    };\n    window.addEventListener('scroll', handleScroll, {\n      passive: true\n    });\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [lastScrollY]);\n  useEffect(() => {\n    const loadLog = async () => {\n      const saved = await manager.loadTable(id);\n      if (saved) {\n        setLog(saved);\n      } else {\n        const today = new Date().toISOString().split(\"T\")[0];\n        const defaultRow = {\n          id: 0,\n          muscleGroup: \"\",\n          exercise: \"\",\n          sets: [{\n            reps: \"\",\n            weight: \"\"\n          }, {\n            reps: \"\",\n            weight: \"\"\n          }],\n          notes: \"\",\n          showNotes: false,\n          weightUnit: \"lbs\"\n        };\n        const defaultLog = {\n          id: id,\n          tableName: \"New Log\",\n          date: today,\n          rows: [defaultRow]\n        };\n        setLog(defaultLog);\n      }\n    };\n    loadLog();\n  }, [id]);\n\n  // Fetch suggestions when component mounts\n  useEffect(() => {\n    const fetchSuggestions = async () => {\n      try {\n        const [muscleGroups, exercises] = await Promise.all([manager.getUniqueMuscleGroups(), manager.getUniqueExercises()]);\n        setMuscleGroupSuggestions(muscleGroups);\n        setExerciseSuggestions(exercises);\n      } catch (error) {\n        console.error(\"Error fetching suggestions:\", error);\n      }\n    };\n    fetchSuggestions();\n  }, []);\n\n  // Update exercise suggestions when muscle group changes\n  useEffect(() => {\n    const fetchExercisesForMuscleGroup = async () => {\n      if (currentMuscleGroup.trim()) {\n        try {\n          const exercises = await manager.getExercisesForMuscleGroup(currentMuscleGroup);\n          setExerciseSuggestions(exercises);\n        } catch (error) {\n          console.error(\"Error fetching exercises for muscle group:\", error);\n        }\n      } else {\n        // If no muscle group selected, show all exercises\n        try {\n          const allExercises = await manager.getUniqueExercises();\n          setExerciseSuggestions(allExercises);\n        } catch (error) {\n          console.error(\"Error fetching all exercises:\", error);\n        }\n      }\n    };\n    fetchExercisesForMuscleGroup();\n  }, [currentMuscleGroup]);\n  const updateRow = (index, updatedRow) => {\n    setLog(prevLog => {\n      const newRows = [...prevLog.rows];\n      newRows[index] = {\n        ...newRows[index],\n        ...updatedRow\n      };\n      return {\n        ...prevLog,\n        rows: newRows\n      };\n    });\n  };\n  const addRow = () => {\n    setLog(prevLog => {\n      const newRow = {\n        id: prevLog.rows.length,\n        muscleGroup: \"\",\n        exercise: \"\",\n        sets: [{\n          reps: \"\",\n          weight: \"\"\n        }],\n        notes: \"\",\n        showNotes: false,\n        weightUnit: \"lbs\"\n      };\n      return {\n        ...prevLog,\n        rows: [...prevLog.rows, newRow]\n      };\n    });\n  };\n  const deleteLastRow = () => {\n    setLog(prevLog => {\n      if (prevLog.rows.length <= 1) return prevLog;\n      const newRows = prevLog.rows.slice(0, -1);\n      return {\n        ...prevLog,\n        rows: newRows\n      };\n    });\n  };\n  const handleRename = e => {\n    setLog(prevLog => ({\n      ...prevLog,\n      tableName: e.target.value\n    }));\n  };\n  const handleMuscleGroupChange = muscleGroup => {\n    setCurrentMuscleGroup(muscleGroup);\n  };\n\n  // Temporarily disable auto-save to fix infinite loop\n  // TODO: Re-implement auto-save with proper state management\n  const saveManually = () => {\n    if (log) {\n      manager.saveTable(log);\n    }\n  };\n  if (!log) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      minHeight: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      paddingTop: \"5rem\",\n      // Add top padding to prevent overlap with back button\n      color: theme.text,\n      background: theme.background,\n      minHeight: \"100vh\",\n      position: \"relative\",\n      transition: \"background-color 0.3s ease, color 0.3s ease\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log(`Navigating back from table ${id} to /log`);\n        try {\n          navigate(\"/log\", {\n            replace: true\n          });\n          // Force navigation if it doesn't work\n          setTimeout(() => {\n            if (window.location.pathname.includes('/log/')) {\n              console.log(\"Force redirecting to /log\");\n              window.location.href = '/log';\n            }\n          }, 100);\n        } catch (error) {\n          console.error(\"Navigation error:\", error);\n          window.location.href = '/log';\n        }\n      },\n      style: {\n        position: \"fixed\",\n        top: \"1rem\",\n        left: \"1rem\",\n        background: theme.accentSecondary,\n        color: theme.accent,\n        padding: \"0.7rem 1.4rem\",\n        border: \"none\",\n        borderRadius: \"10px\",\n        fontWeight: \"600\",\n        fontSize: \"1rem\",\n        cursor: \"pointer\",\n        zIndex: 1000,\n        transition: \"all 0.3s ease\",\n        opacity: showBackButton ? 1 : 0,\n        transform: showBackButton ? \"translateY(0)\" : \"translateY(-10px)\",\n        pointerEvents: showBackButton ? \"auto\" : \"none\"\n      },\n      onMouseOver: e => e.currentTarget.style.background = theme.accentHover,\n      onMouseOut: e => e.currentTarget.style.background = theme.accentSecondary,\n      children: \"\\u2190 Back to Saved Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: log.tableName,\n        onChange: handleRename,\n        style: {\n          fontSize: \"2rem\",\n          fontWeight: \"bold\",\n          background: \"transparent\",\n          border: \"none\",\n          borderBottom: `2px solid ${theme.accent}`,\n          color: theme.accent,\n          marginBottom: \"1rem\",\n          width: \"100%\",\n          padding: \"0.5rem 0\",\n          transition: \"border-color 0.3s ease, color 0.3s ease\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: log.date,\n        onChange: e => setLog(prevLog => ({\n          ...prevLog,\n          date: e.target.value\n        })),\n        style: {\n          background: theme.surfaceSecondary,\n          color: theme.text,\n          padding: \"0.7rem 1.4rem\",\n          border: \"none\",\n          borderRadius: \"10px\",\n          fontWeight: \"600\",\n          fontSize: \"1rem\",\n          cursor: \"pointer\",\n          marginRight: 0,\n          marginTop: 0,\n          marginBottom: \"1rem\",\n          transition: \"background 0.2s ease\"\n        },\n        onMouseOver: e => e.currentTarget.style.background = theme.surfaceTertiary,\n        onMouseOut: e => e.currentTarget.style.background = theme.surfaceSecondary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        border: \"none\",\n        height: \"1px\",\n        background: theme.border,\n        margin: \"2rem 0\",\n        transition: \"background-color 0.3s ease\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), log.rows.map((row, index) => /*#__PURE__*/_jsxDEV(TrainingLogRow, {\n      rowData: row,\n      onUpdate: updated => updateRow(index, updated),\n      muscleGroupSuggestions: muscleGroupSuggestions,\n      exerciseSuggestions: exerciseSuggestions,\n      onMuscleGroupChange: handleMuscleGroupChange,\n      currentLogId: log.id\n    }, row.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\",\n        padding: \"1.5rem\",\n        background: theme.cardBackground,\n        borderRadius: \"12px\",\n        border: `1px solid ${theme.cardBorder}`,\n        transition: \"background-color 0.3s ease, border-color 0.3s ease\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginBottom: \"1rem\",\n          color: theme.accent,\n          fontSize: \"1.2rem\",\n          transition: \"color 0.3s ease\"\n        },\n        children: \"Exercise Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRow,\n        style: {\n          background: theme.accentSecondary,\n          color: theme.accent,\n          padding: \"0.7rem 1.4rem\",\n          border: \"none\",\n          borderRadius: \"10px\",\n          cursor: \"pointer\",\n          fontWeight: 600,\n          fontSize: \"1rem\",\n          marginRight: \"1rem\",\n          marginTop: \"1rem\",\n          transition: \"background 0.2s ease\"\n        },\n        onMouseOver: e => e.currentTarget.style.background = theme.accentHover,\n        onMouseOut: e => e.currentTarget.style.background = theme.accentSecondary,\n        children: \"+ Add Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteLastRow,\n        disabled: log.rows.length <= 1,\n        style: {\n          background: log.rows.length <= 1 ? theme.textMuted : theme.surfaceSecondary,\n          color: log.rows.length <= 1 ? theme.textSecondary : theme.textSecondary,\n          padding: \"0.7rem 1.4rem\",\n          border: `1px solid ${theme.border}`,\n          borderRadius: \"10px\",\n          cursor: log.rows.length <= 1 ? \"not-allowed\" : \"pointer\",\n          fontWeight: 600,\n          fontSize: \"1rem\",\n          marginRight: \"1rem\",\n          marginTop: \"1rem\",\n          transition: \"background 0.2s ease, border-color 0.2s ease\"\n        },\n        onMouseOver: e => {\n          if (log.rows.length > 1) {\n            e.currentTarget.style.background = theme.surfaceTertiary;\n            e.currentTarget.style.borderColor = theme.textMuted;\n          }\n        },\n        onMouseOut: e => {\n          if (log.rows.length > 1) {\n            e.currentTarget.style.background = theme.surfaceSecondary;\n            e.currentTarget.style.borderColor = theme.border;\n          }\n        },\n        children: \"- Delete Last\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveManually,\n        style: {\n          background: theme.accent,\n          color: theme.background,\n          padding: \"0.7rem 1.4rem\",\n          border: \"none\",\n          borderRadius: \"10px\",\n          cursor: \"pointer\",\n          fontWeight: 600,\n          fontSize: \"1rem\",\n          marginTop: \"1rem\",\n          transition: \"background 0.2s ease\"\n        },\n        onMouseOver: e => e.currentTarget.style.background = theme.accentHover,\n        onMouseOut: e => e.currentTarget.style.background = theme.accent,\n        children: \"Save Workout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n_s(TrainingLogTable, \"meiVBUsx71PSUssTEBygM0A9zs8=\", false, function () {\n  return [useParams, useNavigate, useTheme];\n});\n_c = TrainingLogTable;\nvar _c;\n$RefreshReg$(_c, \"TrainingLogTable\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","useTheme","TrainingLogManager","TrainingLogRow","useAutoSave","useFormKeyboardNavigation","jsxDEV","_jsxDEV","manager","TrainingLogTable","_s","id","navigate","theme","log","setLog","muscleGroupSuggestions","setMuscleGroupSuggestions","exerciseSuggestions","setExerciseSuggestions","currentMuscleGroup","setCurrentMuscleGroup","showBackButton","setShowBackButton","lastScrollY","setLastScrollY","windowWidth","setWindowWidth","window","innerWidth","saveStatus","setSaveStatus","lastSaveTime","setLastSaveTime","handleResize","addEventListener","removeEventListener","handleScroll","currentScrollY","scrollY","isAtTop","isScrollingUp","passive","loadLog","saved","loadTable","today","Date","toISOString","split","defaultRow","muscleGroup","exercise","sets","reps","weight","notes","showNotes","weightUnit","defaultLog","tableName","date","rows","fetchSuggestions","muscleGroups","exercises","Promise","all","getUniqueMuscleGroups","getUniqueExercises","error","console","fetchExercisesForMuscleGroup","trim","getExercisesForMuscleGroup","allExercises","updateRow","index","updatedRow","prevLog","newRows","addRow","newRow","length","deleteLastRow","slice","handleRename","e","target","value","handleMuscleGroupChange","saveManually","saveTable","style","background","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","padding","paddingTop","color","text","position","transition","children","onClick","replace","setTimeout","location","pathname","includes","href","top","left","accentSecondary","accent","border","borderRadius","fontWeight","fontSize","cursor","zIndex","opacity","transform","pointerEvents","onMouseOver","currentTarget","accentHover","onMouseOut","marginBottom","type","onChange","borderBottom","width","surfaceSecondary","marginRight","marginTop","surfaceTertiary","height","margin","map","row","rowData","onUpdate","updated","onMuscleGroupChange","currentLogId","cardBackground","cardBorder","disabled","textMuted","textSecondary","borderColor","_c","$RefreshReg$"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/components/TrainingLogTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useTheme } from \"../context/ThemeContext\";\r\nimport TrainingLogManager from \"./TrainingLogManager\";\r\nimport TrainingLogRow from \"./TrainingLogRow\";\r\nimport { useAutoSave } from \"../hooks/useAutoSave\";\r\nimport { useFormKeyboardNavigation } from \"../hooks/useKeyboardShortcuts\";\r\n\r\nconst manager = new TrainingLogManager();\r\n\r\nexport default function TrainingLogTable() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const { theme } = useTheme();\r\n    const [log, setLog] = useState(null);\r\n    const [muscleGroupSuggestions, setMuscleGroupSuggestions] = useState([]);\r\n    const [exerciseSuggestions, setExerciseSuggestions] = useState([]);\r\n    const [currentMuscleGroup, setCurrentMuscleGroup] = useState(\"\");\r\n    const [showBackButton, setShowBackButton] = useState(true);\r\n    const [lastScrollY, setLastScrollY] = useState(0);\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n    const [saveStatus, setSaveStatus] = useState('');\r\n    const [lastSaveTime, setLastSaveTime] = useState(null);\r\n\r\n    // Window resize detection\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(window.innerWidth);\r\n        };\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            const currentScrollY = window.scrollY;\r\n            \r\n            // Show button if at top of page or scrolling up\r\n            const isAtTop = currentScrollY < 50;\r\n            const isScrollingUp = currentScrollY < lastScrollY;\r\n            \r\n            setShowBackButton(isAtTop || isScrollingUp);\r\n            setLastScrollY(currentScrollY);\r\n        };\r\n\r\n        window.addEventListener('scroll', handleScroll, { passive: true });\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, [lastScrollY]);\r\n\r\n    useEffect(() => {\r\n        const loadLog = async () => {\r\n            const saved = await manager.loadTable(id);\r\n            if (saved) {\r\n                setLog(saved);\r\n            } else {\r\n                const today = new Date().toISOString().split(\"T\")[0];\r\n                const defaultRow = {\r\n                    id: 0,\r\n                    muscleGroup: \"\",\r\n                    exercise: \"\",\r\n                    sets: [\r\n                        { reps: \"\", weight: \"\" },\r\n                        { reps: \"\", weight: \"\" }\r\n                    ],\r\n                    notes: \"\",\r\n                    showNotes: false,\r\n                    weightUnit: \"lbs\"\r\n                };\r\n                const defaultLog = {\r\n                    id: id,\r\n                    tableName: \"New Log\",\r\n                    date: today,\r\n                    rows: [defaultRow]\r\n                };\r\n                setLog(defaultLog);\r\n            }\r\n        };\r\n\r\n        loadLog();\r\n    }, [id]);\r\n\r\n    // Fetch suggestions when component mounts\r\n    useEffect(() => {\r\n        const fetchSuggestions = async () => {\r\n            try {\r\n                const [muscleGroups, exercises] = await Promise.all([\r\n                    manager.getUniqueMuscleGroups(),\r\n                    manager.getUniqueExercises()\r\n                ]);\r\n                setMuscleGroupSuggestions(muscleGroups);\r\n                setExerciseSuggestions(exercises);\r\n            } catch (error) {\r\n                console.error(\"Error fetching suggestions:\", error);\r\n            }\r\n        };\r\n\r\n        fetchSuggestions();\r\n    }, []);\r\n\r\n    // Update exercise suggestions when muscle group changes\r\n    useEffect(() => {\r\n        const fetchExercisesForMuscleGroup = async () => {\r\n            if (currentMuscleGroup.trim()) {\r\n                try {\r\n                    const exercises = await manager.getExercisesForMuscleGroup(currentMuscleGroup);\r\n                    setExerciseSuggestions(exercises);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching exercises for muscle group:\", error);\r\n                }\r\n            } else {\r\n                // If no muscle group selected, show all exercises\r\n                try {\r\n                    const allExercises = await manager.getUniqueExercises();\r\n                    setExerciseSuggestions(allExercises);\r\n                } catch (error) {\r\n                    console.error(\"Error fetching all exercises:\", error);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchExercisesForMuscleGroup();\r\n    }, [currentMuscleGroup]);\r\n\r\n    const updateRow = (index, updatedRow) => {\r\n        setLog(prevLog => {\r\n            const newRows = [...prevLog.rows];\r\n            newRows[index] = { ...newRows[index], ...updatedRow };\r\n            return { ...prevLog, rows: newRows };\r\n        });\r\n    };\r\n\r\n    const addRow = () => {\r\n        setLog(prevLog => {\r\n            const newRow = {\r\n                id: prevLog.rows.length,\r\n                muscleGroup: \"\",\r\n                exercise: \"\",\r\n                sets: [{ reps: \"\", weight: \"\" }],\r\n                notes: \"\",\r\n                showNotes: false,\r\n                weightUnit: \"lbs\"\r\n            };\r\n            return { ...prevLog, rows: [...prevLog.rows, newRow] };\r\n        });\r\n    };\r\n\r\n    const deleteLastRow = () => {\r\n        setLog(prevLog => {\r\n            if (prevLog.rows.length <= 1) return prevLog;\r\n            const newRows = prevLog.rows.slice(0, -1);\r\n            return { ...prevLog, rows: newRows };\r\n        });\r\n    };\r\n\r\n    const handleRename = (e) => {\r\n        setLog(prevLog => ({ ...prevLog, tableName: e.target.value }));\r\n    };\r\n\r\n    const handleMuscleGroupChange = (muscleGroup) => {\r\n        setCurrentMuscleGroup(muscleGroup);\r\n    };\r\n\r\n    // Temporarily disable auto-save to fix infinite loop\r\n    // TODO: Re-implement auto-save with proper state management\r\n    const saveManually = () => {\r\n        if (log) {\r\n            manager.saveTable(log);\r\n        }\r\n    };\r\n\r\n    if (!log) return <div style={{ background: theme.background, minHeight: \"100vh\" }}></div>;\r\n\r\n    return (\r\n        <div style={{ \r\n            padding: \"2rem\",\r\n            paddingTop: \"5rem\", // Add top padding to prevent overlap with back button\r\n            color: theme.text, \r\n            background: theme.background, \r\n            minHeight: \"100vh\",\r\n            position: \"relative\",\r\n            transition: \"background-color 0.3s ease, color 0.3s ease\"\r\n        }}>\r\n            <button\r\n                onClick={() => {\r\n                    console.log(`Navigating back from table ${id} to /log`);\r\n                    try {\r\n                        navigate(\"/log\", { replace: true });\r\n                        // Force navigation if it doesn't work\r\n                        setTimeout(() => {\r\n                            if (window.location.pathname.includes('/log/')) {\r\n                                console.log(\"Force redirecting to /log\");\r\n                                window.location.href = '/log';\r\n                            }\r\n                        }, 100);\r\n                    } catch (error) {\r\n                        console.error(\"Navigation error:\", error);\r\n                        window.location.href = '/log';\r\n                    }\r\n                }}\r\n                style={{\r\n                    position: \"fixed\",\r\n                    top: \"1rem\",\r\n                    left: \"1rem\",\r\n                    background: theme.accentSecondary,\r\n                    color: theme.accent,\r\n                    padding: \"0.7rem 1.4rem\",\r\n                    border: \"none\",\r\n                    borderRadius: \"10px\",\r\n                    fontWeight: \"600\",\r\n                    fontSize: \"1rem\",\r\n                    cursor: \"pointer\",\r\n                    zIndex: 1000,\r\n                    transition: \"all 0.3s ease\",\r\n                    opacity: showBackButton ? 1 : 0,\r\n                    transform: showBackButton ? \"translateY(0)\" : \"translateY(-10px)\",\r\n                    pointerEvents: showBackButton ? \"auto\" : \"none\"\r\n                }}\r\n                onMouseOver={e => e.currentTarget.style.background = theme.accentHover}\r\n                onMouseOut={e => e.currentTarget.style.background = theme.accentSecondary}\r\n            >\r\n                ← Back to Saved Logs\r\n            </button>\r\n\r\n            <div style={{ marginBottom: \"2rem\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={log.tableName}\r\n                    onChange={handleRename}\r\n                    style={{\r\n                        fontSize: \"2rem\",\r\n                        fontWeight: \"bold\",\r\n                        background: \"transparent\",\r\n                        border: \"none\",\r\n                        borderBottom: `2px solid ${theme.accent}`,\r\n                        color: theme.accent,\r\n                        marginBottom: \"1rem\",\r\n                        width: \"100%\",\r\n                        padding: \"0.5rem 0\",\r\n                        transition: \"border-color 0.3s ease, color 0.3s ease\"\r\n                    }}\r\n                />\r\n\r\n                <input\r\n                    type=\"date\"\r\n                    value={log.date}\r\n                    onChange={(e) => setLog(prevLog => ({ ...prevLog, date: e.target.value }))}\r\n                    style={{\r\n                        background: theme.surfaceSecondary,\r\n                        color: theme.text,\r\n                        padding: \"0.7rem 1.4rem\",\r\n                        border: \"none\",\r\n                        borderRadius: \"10px\",\r\n                        fontWeight: \"600\",\r\n                        fontSize: \"1rem\",\r\n                        cursor: \"pointer\",\r\n                        marginRight: 0,\r\n                        marginTop: 0,\r\n                        marginBottom: \"1rem\",\r\n                        transition: \"background 0.2s ease\"\r\n                    }}\r\n                    onMouseOver={e => e.currentTarget.style.background = theme.surfaceTertiary}\r\n                    onMouseOut={e => e.currentTarget.style.background = theme.surfaceSecondary}\r\n                />\r\n            </div>\r\n\r\n            <hr style={{ \r\n                border: \"none\", \r\n                height: \"1px\", \r\n                background: theme.border, \r\n                margin: \"2rem 0\",\r\n                transition: \"background-color 0.3s ease\"\r\n            }} />\r\n\r\n            {log.rows.map((row, index) => (\r\n                <TrainingLogRow\r\n                    key={row.id}\r\n                    rowData={row}\r\n                    onUpdate={(updated) => updateRow(index, updated)}\r\n                    muscleGroupSuggestions={muscleGroupSuggestions}\r\n                    exerciseSuggestions={exerciseSuggestions}\r\n                    onMuscleGroupChange={handleMuscleGroupChange}\r\n                    currentLogId={log.id}\r\n                />\r\n            ))}\r\n\r\n            <div style={{ \r\n                marginTop: \"2rem\",\r\n                padding: \"1.5rem\",\r\n                background: theme.cardBackground,\r\n                borderRadius: \"12px\",\r\n                border: `1px solid ${theme.cardBorder}`,\r\n                transition: \"background-color 0.3s ease, border-color 0.3s ease\"\r\n            }}>\r\n                <h3 style={{ \r\n                    marginBottom: \"1rem\", \r\n                    color: theme.accent,\r\n                    fontSize: \"1.2rem\",\r\n                    transition: \"color 0.3s ease\"\r\n                }}>\r\n                    Exercise Management\r\n                </h3>\r\n                <button\r\n                    onClick={addRow}\r\n                    style={{\r\n                        background: theme.accentSecondary,\r\n                        color: theme.accent,\r\n                        padding: \"0.7rem 1.4rem\",\r\n                        border: \"none\",\r\n                        borderRadius: \"10px\",\r\n                        cursor: \"pointer\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"1rem\",\r\n                        marginRight: \"1rem\",\r\n                        marginTop: \"1rem\",\r\n                        transition: \"background 0.2s ease\"\r\n                    }}\r\n                    onMouseOver={e => e.currentTarget.style.background = theme.accentHover}\r\n                    onMouseOut={e => e.currentTarget.style.background = theme.accentSecondary}\r\n                >\r\n                    + Add Exercise\r\n                </button>\r\n                <button\r\n                    onClick={deleteLastRow}\r\n                    disabled={log.rows.length <= 1}\r\n                    style={{\r\n                        background: log.rows.length <= 1 ? theme.textMuted : theme.surfaceSecondary,\r\n                        color: log.rows.length <= 1 ? theme.textSecondary : theme.textSecondary,\r\n                        padding: \"0.7rem 1.4rem\",\r\n                        border: `1px solid ${theme.border}`,\r\n                        borderRadius: \"10px\",\r\n                        cursor: log.rows.length <= 1 ? \"not-allowed\" : \"pointer\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"1rem\",\r\n                        marginRight: \"1rem\",\r\n                        marginTop: \"1rem\",\r\n                        transition: \"background 0.2s ease, border-color 0.2s ease\"\r\n                    }}\r\n                    onMouseOver={e => {\r\n                        if (log.rows.length > 1) {\r\n                            e.currentTarget.style.background = theme.surfaceTertiary;\r\n                            e.currentTarget.style.borderColor = theme.textMuted;\r\n                        }\r\n                    }}\r\n                    onMouseOut={e => {\r\n                        if (log.rows.length > 1) {\r\n                            e.currentTarget.style.background = theme.surfaceSecondary;\r\n                            e.currentTarget.style.borderColor = theme.border;\r\n                        }\r\n                    }}\r\n                >\r\n                    - Delete Last\r\n                </button>\r\n                <button\r\n                    onClick={saveManually}\r\n                    style={{\r\n                        background: theme.accent,\r\n                        color: theme.background,\r\n                        padding: \"0.7rem 1.4rem\",\r\n                        border: \"none\",\r\n                        borderRadius: \"10px\",\r\n                        cursor: \"pointer\",\r\n                        fontWeight: 600,\r\n                        fontSize: \"1rem\",\r\n                        marginTop: \"1rem\",\r\n                        transition: \"background 0.2s ease\"\r\n                    }}\r\n                    onMouseOver={e => e.currentTarget.style.background = theme.accentHover}\r\n                    onMouseOut={e => e.currentTarget.style.background = theme.accent}\r\n                >\r\n                    Save Workout\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}