{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidus\\\\OneDrive\\\\Documentos\\\\Summer2025\\\\fitness-tracker-frontend\\\\Frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on app start\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      fetchUserProfile(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUserProfile = async authToken => {\n    try {\n      const response = await fetch('http://localhost:8000/api/auth/me', {\n        headers: {\n          'Authorization': `Bearer ${authToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        // Token is invalid, remove it\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const newToken = data.access_token;\n        localStorage.setItem('token', newToken);\n        setToken(newToken);\n\n        // Fetch user profile\n        await fetchUserProfile(newToken);\n        return {\n          success: true\n        };\n      } else {\n        const errorData = await response.json();\n        return {\n          success: false,\n          error: errorData.detail || 'Login failed'\n        };\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async (email, password) => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:8000/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const newToken = data.access_token;\n        localStorage.setItem('token', newToken);\n        setToken(newToken);\n\n        // Fetch user profile\n        await fetchUserProfile(newToken);\n        return {\n          success: true\n        };\n      } else {\n        const errorData = await response.json();\n        return {\n          success: false,\n          error: errorData.detail || 'Registration failed'\n        };\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        error: 'Network error. Please try again.'\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","storedToken","fetchUserProfile","authToken","response","fetch","headers","ok","userData","json","removeItem","error","console","login","email","password","method","body","JSON","stringify","data","newToken","access_token","setItem","success","errorData","detail","register","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/Frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is authenticated on app start\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedToken) {\r\n      setToken(storedToken);\r\n      fetchUserProfile(storedToken);\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  const fetchUserProfile = async (authToken) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/auth/me', {\r\n        headers: {\r\n          'Authorization': `Bearer ${authToken}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const userData = await response.json();\r\n        setUser(userData);\r\n      } else {\r\n        // Token is invalid, remove it\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/auth/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const newToken = data.access_token;\r\n        \r\n        localStorage.setItem('token', newToken);\r\n        setToken(newToken);\r\n        \r\n        // Fetch user profile\r\n        await fetchUserProfile(newToken);\r\n        \r\n        return { success: true };\r\n      } else {\r\n        const errorData = await response.json();\r\n        return { success: false, error: errorData.detail || 'Login failed' };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return { success: false, error: 'Network error. Please try again.' };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (email, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:8000/api/auth/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        const newToken = data.access_token;\r\n        \r\n        localStorage.setItem('token', newToken);\r\n        setToken(newToken);\r\n        \r\n        // Fetch user profile\r\n        await fetchUserProfile(newToken);\r\n        \r\n        return { success: true };\r\n      } else {\r\n        const errorData = await response.json();\r\n        return { success: false, error: errorData.detail || 'Registration failed' };\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return { success: false, error: 'Network error. Please try again.' };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}