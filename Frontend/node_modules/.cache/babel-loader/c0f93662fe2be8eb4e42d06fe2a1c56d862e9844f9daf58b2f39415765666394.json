{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef } from 'react';\n\n/**\n * Custom hook for debounced auto-save functionality\n * Prevents infinite loops by debouncing save operations and tracking save state\n * \n * @param {Function} saveFunction - Function to call for saving data\n * @param {*} data - Data to save (will trigger save when changed)\n * @param {number} delay - Debounce delay in milliseconds (default: 2000)\n * @param {boolean} enabled - Whether auto-save is enabled (default: true)\n * @returns {Object} - { save: manualSaveFunction, isSaving: boolean, lastSaved: Date }\n */\nexport const useAutoSave = (saveFunction, data, delay = 2000, enabled = true) => {\n  _s();\n  const timeoutRef = useRef(null);\n  const isSavingRef = useRef(false);\n  const lastSavedDataRef = useRef(null);\n  const lastSavedTimeRef = useRef(null);\n\n  // Create a stable save function that doesn't change on every render\n  const stableSaveFunction = useCallback(saveFunction, []);\n\n  // Manual save function that can be called immediately\n  const manualSave = useCallback(async () => {\n    if (isSavingRef.current) return;\n    try {\n      isSavingRef.current = true;\n      await stableSaveFunction(data);\n      lastSavedDataRef.current = JSON.stringify(data);\n      lastSavedTimeRef.current = new Date();\n    } catch (error) {\n      console.error('Save failed:', error);\n      throw error;\n    } finally {\n      isSavingRef.current = false;\n    }\n  }, [data, stableSaveFunction]);\n\n  // Auto-save effect\n  useEffect(() => {\n    if (!enabled || !data) return;\n\n    // Don't auto-save if data hasn't changed\n    const currentDataString = JSON.stringify(data);\n    if (currentDataString === lastSavedDataRef.current) {\n      return;\n    }\n\n    // Don't auto-save if currently saving\n    if (isSavingRef.current) {\n      return;\n    }\n\n    // Clear existing timeout\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    // Set new timeout for debounced save\n    timeoutRef.current = setTimeout(async () => {\n      try {\n        await manualSave();\n        console.log('Auto-saved at:', new Date().toLocaleTimeString());\n      } catch (error) {\n        console.error('Auto-save failed:', error);\n      }\n    }, delay);\n\n    // Cleanup function\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [data, delay, enabled, manualSave]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  return {\n    save: manualSave,\n    isSaving: isSavingRef.current,\n    lastSaved: lastSavedTimeRef.current\n  };\n};\n_s(useAutoSave, \"9tKf87IZM5bguPsfJoZF0x7E7Ew=\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useAutoSave","saveFunction","data","delay","enabled","_s","timeoutRef","isSavingRef","lastSavedDataRef","lastSavedTimeRef","stableSaveFunction","manualSave","current","JSON","stringify","Date","error","console","currentDataString","clearTimeout","setTimeout","log","toLocaleTimeString","save","isSaving","lastSaved"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/hooks/useAutoSave.js"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\n/**\n * Custom hook for debounced auto-save functionality\n * Prevents infinite loops by debouncing save operations and tracking save state\n * \n * @param {Function} saveFunction - Function to call for saving data\n * @param {*} data - Data to save (will trigger save when changed)\n * @param {number} delay - Debounce delay in milliseconds (default: 2000)\n * @param {boolean} enabled - Whether auto-save is enabled (default: true)\n * @returns {Object} - { save: manualSaveFunction, isSaving: boolean, lastSaved: Date }\n */\nexport const useAutoSave = (saveFunction, data, delay = 2000, enabled = true) => {\n    const timeoutRef = useRef(null);\n    const isSavingRef = useRef(false);\n    const lastSavedDataRef = useRef(null);\n    const lastSavedTimeRef = useRef(null);\n\n    // Create a stable save function that doesn't change on every render\n    const stableSaveFunction = useCallback(saveFunction, []);\n\n    // Manual save function that can be called immediately\n    const manualSave = useCallback(async () => {\n        if (isSavingRef.current) return;\n        \n        try {\n            isSavingRef.current = true;\n            await stableSaveFunction(data);\n            lastSavedDataRef.current = JSON.stringify(data);\n            lastSavedTimeRef.current = new Date();\n        } catch (error) {\n            console.error('Save failed:', error);\n            throw error;\n        } finally {\n            isSavingRef.current = false;\n        }\n    }, [data, stableSaveFunction]);\n\n    // Auto-save effect\n    useEffect(() => {\n        if (!enabled || !data) return;\n\n        // Don't auto-save if data hasn't changed\n        const currentDataString = JSON.stringify(data);\n        if (currentDataString === lastSavedDataRef.current) {\n            return;\n        }\n\n        // Don't auto-save if currently saving\n        if (isSavingRef.current) {\n            return;\n        }\n\n        // Clear existing timeout\n        if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n        }\n\n        // Set new timeout for debounced save\n        timeoutRef.current = setTimeout(async () => {\n            try {\n                await manualSave();\n                console.log('Auto-saved at:', new Date().toLocaleTimeString());\n            } catch (error) {\n                console.error('Auto-save failed:', error);\n            }\n        }, delay);\n\n        // Cleanup function\n        return () => {\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n            }\n        };\n    }, [data, delay, enabled, manualSave]);\n\n    // Cleanup on unmount\n    useEffect(() => {\n        return () => {\n            if (timeoutRef.current) {\n                clearTimeout(timeoutRef.current);\n            }\n        };\n    }, []);\n\n    return {\n        save: manualSave,\n        isSaving: isSavingRef.current,\n        lastSaved: lastSavedTimeRef.current\n    };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}