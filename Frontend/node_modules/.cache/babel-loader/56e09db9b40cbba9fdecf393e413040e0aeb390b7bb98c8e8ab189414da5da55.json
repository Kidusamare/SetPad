{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidus\\\\OneDrive\\\\Documentos\\\\Summer2025\\\\fitness-tracker-frontend\\\\src\\\\components\\\\SmartSuggestions.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { InlineSpinner } from \"./LoadingSpinner\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SmartSuggestions = ({\n  muscleGroup,\n  currentExercise,\n  onSuggestionSelect\n}) => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const [suggestions, setSuggestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n\n  // Exercise database by muscle group\n  const exerciseDatabase = {\n    \"Chest\": [\"Bench Press\", \"Incline Bench Press\", \"Decline Bench Press\", \"Dumbbell Press\", \"Incline Dumbbell Press\", \"Dumbbell Flyes\", \"Incline Flyes\", \"Cable Flyes\", \"Push-ups\", \"Dips\", \"Chest Press Machine\", \"Pec Deck\", \"Cable Crossover\"],\n    \"Back\": [\"Deadlift\", \"Pull-ups\", \"Chin-ups\", \"Barbell Rows\", \"Dumbbell Rows\", \"T-Bar Rows\", \"Cable Rows\", \"Lat Pulldowns\", \"Face Pulls\", \"Reverse Flyes\", \"Hyperextensions\", \"Good Mornings\", \"Shrugs\"],\n    \"Shoulders\": [\"Overhead Press\", \"Military Press\", \"Dumbbell Press\", \"Arnold Press\", \"Lateral Raises\", \"Front Raises\", \"Rear Delt Flyes\", \"Upright Rows\", \"Pike Push-ups\", \"Handstand Push-ups\", \"Cable Lateral Raises\"],\n    \"Legs\": [\"Squat\", \"Front Squat\", \"Leg Press\", \"Lunges\", \"Bulgarian Split Squats\", \"Romanian Deadlift\", \"Leg Curls\", \"Leg Extensions\", \"Calf Raises\", \"Walking Lunges\", \"Step-ups\", \"Wall Sits\", \"Single Leg Deadlifts\"],\n    \"Biceps\": [\"Barbell Curls\", \"Dumbbell Curls\", \"Hammer Curls\", \"Cable Curls\", \"Preacher Curls\", \"Concentration Curls\", \"21s\", \"Chin-ups\"],\n    \"Triceps\": [\"Close-Grip Bench Press\", \"Tricep Dips\", \"Overhead Tricep Extension\", \"Tricep Pushdowns\", \"Diamond Push-ups\", \"Skull Crushers\", \"French Press\"],\n    \"Abs\": [\"Plank\", \"Crunches\", \"Bicycle Crunches\", \"Russian Twists\", \"Mountain Climbers\", \"Hanging Leg Raises\", \"Ab Wheel\", \"Dead Bug\", \"Hollow Body Hold\"],\n    \"Glutes\": [\"Hip Thrusts\", \"Glute Bridges\", \"Romanian Deadlift\", \"Bulgarian Split Squats\", \"Clamshells\", \"Monster Walks\", \"Fire Hydrants\", \"Glute Ham Raise\"],\n    \"Calves\": [\"Calf Raises\", \"Seated Calf Raises\", \"Donkey Calf Raises\", \"Jump Rope\", \"Box Jumps\", \"Single Leg Calf Raises\"]\n  };\n\n  // AI-powered suggestions based on workout context\n  const getAISuggestions = async (muscleGroup, currentExercise) => {\n    setIsLoading(true);\n    try {\n      // Simulate AI API call for smart suggestions\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/ai-coaching/exercise-suggestions`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          muscle_group: muscleGroup,\n          current_exercise: currentExercise,\n          context: \"progressive_overload\"\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        return data.suggestions || [];\n      }\n    } catch (error) {\n      console.error(\"AI suggestions error:\", error);\n    }\n\n    // Fallback to local database\n    return getLocalSuggestions(muscleGroup, currentExercise);\n  };\n  const getLocalSuggestions = (muscleGroup, currentExercise) => {\n    const exercises = exerciseDatabase[muscleGroup] || [];\n    return exercises.filter(exercise => exercise.toLowerCase() !== currentExercise.toLowerCase() && exercise.toLowerCase().includes(currentExercise.toLowerCase().split(' ')[0])).slice(0, 5);\n  };\n  const fetchSuggestions = async () => {\n    if (!muscleGroup || muscleGroup.length < 2) {\n      setSuggestions([]);\n      return;\n    }\n    const aiSuggestions = await getAISuggestions(muscleGroup, currentExercise);\n    const localSuggestions = getLocalSuggestions(muscleGroup, currentExercise);\n\n    // Combine and deduplicate suggestions\n    const combinedSuggestions = [...new Set([...aiSuggestions, ...localSuggestions])];\n    setSuggestions(combinedSuggestions.slice(0, 6));\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      fetchSuggestions();\n    }, 300); // Debounce suggestions\n\n    return () => clearTimeout(timeoutId);\n  }, [muscleGroup, currentExercise]);\n  const handleSuggestionClick = suggestion => {\n    onSuggestionSelect(suggestion);\n    setShowSuggestions(false);\n  };\n  const toggleSuggestions = () => {\n    setShowSuggestions(!showSuggestions);\n  };\n  if (!muscleGroup || !isLoading && suggestions.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleSuggestions,\n      style: {\n        background: \"none\",\n        border: \"none\",\n        color: theme.accent,\n        fontSize: \"0.8rem\",\n        cursor: \"pointer\",\n        padding: \"0.2rem 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"0.3rem\",\n        transition: \"color 0.2s ease\"\n      },\n      onMouseOver: e => e.currentTarget.style.color = theme.accentHover,\n      onMouseOut: e => e.currentTarget.style.color = theme.accent,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(InlineSpinner, {\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), \"Getting suggestions...\"]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\uD83D\\uDCA1 Smart Suggestions (\", suggestions.length, \")\", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            transform: showSuggestions ? \"rotate(180deg)\" : \"rotate(0deg)\",\n            transition: \"transform 0.2s ease\"\n          },\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), showSuggestions && suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"0.5rem\",\n        background: theme.surfaceSecondary,\n        border: `1px solid ${theme.border}`,\n        borderRadius: \"8px\",\n        padding: \"0.5rem\",\n        maxHeight: \"150px\",\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"0.7rem\",\n          color: theme.textMuted,\n          marginBottom: \"0.5rem\",\n          fontStyle: \"italic\"\n        },\n        children: [\"AI-powered exercise suggestions for \", muscleGroup, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"0.2rem\"\n        },\n        children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSuggestionClick(suggestion),\n          style: {\n            background: \"none\",\n            border: \"none\",\n            color: theme.text,\n            fontSize: \"0.8rem\",\n            padding: \"0.3rem 0.5rem\",\n            textAlign: \"left\",\n            cursor: \"pointer\",\n            borderRadius: \"4px\",\n            transition: \"background 0.2s ease\"\n          },\n          onMouseOver: e => e.currentTarget.style.background = theme.surfaceTertiary,\n          onMouseOut: e => e.currentTarget.style.background = \"none\",\n          children: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n// Weight and Rep Suggestions Component\n_s(SmartSuggestions, \"JNmpGOwBQnrHpwJiuFf+v5Ounog=\", false, function () {\n  return [useTheme];\n});\n_c = SmartSuggestions;\nexport const ProgressionSuggestions = ({\n  currentSets,\n  exercise,\n  onSuggestionApply\n}) => {\n  _s2();\n  const {\n    theme\n  } = useTheme();\n  const [suggestions, setSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  useEffect(() => {\n    if (currentSets && currentSets.length > 0) {\n      generateProgressionSuggestions();\n    }\n  }, [currentSets, exercise]);\n  const generateProgressionSuggestions = () => {\n    const suggestions = [];\n    if (currentSets.length > 0) {\n      const lastSet = currentSets[currentSets.length - 1];\n      const weight = parseFloat(lastSet.weight) || 0;\n      const reps = parseInt(lastSet.reps) || 0;\n      if (weight > 0 && reps > 0) {\n        // Progressive overload suggestions\n        suggestions.push({\n          type: \"Weight Increase\",\n          description: `Add 5 lbs: ${weight + 5} lbs x ${reps} reps`,\n          sets: currentSets.map(set => ({\n            ...set,\n            weight: (parseFloat(set.weight) + 5).toString()\n          }))\n        });\n        suggestions.push({\n          type: \"Rep Increase\",\n          description: `Add 2 reps: ${weight} lbs x ${reps + 2} reps`,\n          sets: currentSets.map(set => ({\n            ...set,\n            reps: (parseInt(set.reps) + 2).toString()\n          }))\n        });\n        if (reps >= 12) {\n          suggestions.push({\n            type: \"Weight + Rep Adjustment\",\n            description: `${weight + 10} lbs x ${Math.max(6, reps - 3)} reps`,\n            sets: currentSets.map(set => ({\n              ...set,\n              weight: (parseFloat(set.weight) + 10).toString(),\n              reps: Math.max(6, parseInt(set.reps) - 3).toString()\n            }))\n          });\n        }\n      }\n    }\n    setSuggestions(suggestions);\n  };\n  const applySuggestion = suggestion => {\n    onSuggestionApply(suggestion.sets);\n    setShowSuggestions(false);\n  };\n  if (suggestions.length === 0) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"0.5rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowSuggestions(!showSuggestions),\n      style: {\n        background: \"none\",\n        border: \"none\",\n        color: theme.accent,\n        fontSize: \"0.8rem\",\n        cursor: \"pointer\",\n        padding: \"0.2rem 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"0.3rem\"\n      },\n      children: [\"\\uD83D\\uDCC8 Progressive Overload Suggestions\", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          transform: showSuggestions ? \"rotate(180deg)\" : \"rotate(0deg)\",\n          transition: \"transform 0.2s ease\"\n        },\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), showSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"0.5rem\",\n        background: theme.surfaceSecondary,\n        border: `1px solid ${theme.border}`,\n        borderRadius: \"8px\",\n        padding: \"0.8rem\"\n      },\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: index < suggestions.length - 1 ? \"0.8rem\" : 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontWeight: \"600\",\n            color: theme.text,\n            fontSize: \"0.8rem\",\n            marginBottom: \"0.2rem\"\n          },\n          children: suggestion.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: theme.textSecondary,\n            fontSize: \"0.7rem\",\n            marginBottom: \"0.5rem\"\n          },\n          children: suggestion.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => applySuggestion(suggestion),\n          style: {\n            background: theme.accent,\n            color: theme.background,\n            border: \"none\",\n            borderRadius: \"4px\",\n            padding: \"0.3rem 0.8rem\",\n            fontSize: \"0.7rem\",\n            fontWeight: \"600\",\n            cursor: \"pointer\",\n            transition: \"background 0.2s ease\"\n          },\n          onMouseOver: e => e.currentTarget.style.background = theme.accentHover,\n          onMouseOut: e => e.currentTarget.style.background = theme.accent,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 9\n  }, this);\n};\n_s2(ProgressionSuggestions, \"Oo94g/D7wNbqYiPCNtmR0llTvzg=\", false, function () {\n  return [useTheme];\n});\n_c2 = ProgressionSuggestions;\nexport default SmartSuggestions;\nvar _c, _c2;\n$RefreshReg$(_c, \"SmartSuggestions\");\n$RefreshReg$(_c2, \"ProgressionSuggestions\");","map":{"version":3,"names":["React","useState","useEffect","useTheme","InlineSpinner","jsxDEV","_jsxDEV","Fragment","_Fragment","SmartSuggestions","muscleGroup","currentExercise","onSuggestionSelect","_s","theme","suggestions","setSuggestions","isLoading","setIsLoading","showSuggestions","setShowSuggestions","exerciseDatabase","getAISuggestions","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","muscle_group","current_exercise","context","ok","data","json","error","console","getLocalSuggestions","exercises","filter","exercise","toLowerCase","includes","split","slice","fetchSuggestions","length","aiSuggestions","localSuggestions","combinedSuggestions","Set","timeoutId","setTimeout","clearTimeout","handleSuggestionClick","suggestion","toggleSuggestions","style","marginTop","children","onClick","background","border","color","accent","fontSize","cursor","padding","display","alignItems","gap","transition","onMouseOver","e","currentTarget","accentHover","onMouseOut","size","fileName","_jsxFileName","lineNumber","columnNumber","transform","surfaceSecondary","borderRadius","maxHeight","overflowY","textMuted","marginBottom","fontStyle","flexDirection","map","index","text","textAlign","surfaceTertiary","_c","ProgressionSuggestions","currentSets","onSuggestionApply","_s2","generateProgressionSuggestions","lastSet","weight","parseFloat","reps","parseInt","push","type","description","sets","set","toString","Math","max","applySuggestion","fontWeight","textSecondary","_c2","$RefreshReg$"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/components/SmartSuggestions.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useTheme } from \"../context/ThemeContext\";\nimport { InlineSpinner } from \"./LoadingSpinner\";\n\nconst SmartSuggestions = ({ muscleGroup, currentExercise, onSuggestionSelect }) => {\n    const { theme } = useTheme();\n    const [suggestions, setSuggestions] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [showSuggestions, setShowSuggestions] = useState(false);\n\n    // Exercise database by muscle group\n    const exerciseDatabase = {\n        \"Chest\": [\n            \"Bench Press\", \"Incline Bench Press\", \"Decline Bench Press\", \"Dumbbell Press\",\n            \"Incline Dumbbell Press\", \"Dumbbell Flyes\", \"Incline Flyes\", \"Cable Flyes\",\n            \"Push-ups\", \"Dips\", \"Chest Press Machine\", \"Pec Deck\", \"Cable Crossover\"\n        ],\n        \"Back\": [\n            \"Deadlift\", \"Pull-ups\", \"Chin-ups\", \"Barbell Rows\", \"Dumbbell Rows\",\n            \"T-Bar Rows\", \"Cable Rows\", \"Lat Pulldowns\", \"Face Pulls\", \"Reverse Flyes\",\n            \"Hyperextensions\", \"Good Mornings\", \"Shrugs\"\n        ],\n        \"Shoulders\": [\n            \"Overhead Press\", \"Military Press\", \"Dumbbell Press\", \"Arnold Press\",\n            \"Lateral Raises\", \"Front Raises\", \"Rear Delt Flyes\", \"Upright Rows\",\n            \"Pike Push-ups\", \"Handstand Push-ups\", \"Cable Lateral Raises\"\n        ],\n        \"Legs\": [\n            \"Squat\", \"Front Squat\", \"Leg Press\", \"Lunges\", \"Bulgarian Split Squats\",\n            \"Romanian Deadlift\", \"Leg Curls\", \"Leg Extensions\", \"Calf Raises\",\n            \"Walking Lunges\", \"Step-ups\", \"Wall Sits\", \"Single Leg Deadlifts\"\n        ],\n        \"Biceps\": [\n            \"Barbell Curls\", \"Dumbbell Curls\", \"Hammer Curls\", \"Cable Curls\",\n            \"Preacher Curls\", \"Concentration Curls\", \"21s\", \"Chin-ups\"\n        ],\n        \"Triceps\": [\n            \"Close-Grip Bench Press\", \"Tricep Dips\", \"Overhead Tricep Extension\",\n            \"Tricep Pushdowns\", \"Diamond Push-ups\", \"Skull Crushers\", \"French Press\"\n        ],\n        \"Abs\": [\n            \"Plank\", \"Crunches\", \"Bicycle Crunches\", \"Russian Twists\", \"Mountain Climbers\",\n            \"Hanging Leg Raises\", \"Ab Wheel\", \"Dead Bug\", \"Hollow Body Hold\"\n        ],\n        \"Glutes\": [\n            \"Hip Thrusts\", \"Glute Bridges\", \"Romanian Deadlift\", \"Bulgarian Split Squats\",\n            \"Clamshells\", \"Monster Walks\", \"Fire Hydrants\", \"Glute Ham Raise\"\n        ],\n        \"Calves\": [\n            \"Calf Raises\", \"Seated Calf Raises\", \"Donkey Calf Raises\", \"Jump Rope\",\n            \"Box Jumps\", \"Single Leg Calf Raises\"\n        ]\n    };\n\n    // AI-powered suggestions based on workout context\n    const getAISuggestions = async (muscleGroup, currentExercise) => {\n        setIsLoading(true);\n        try {\n            // Simulate AI API call for smart suggestions\n            const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:8000'}/ai-coaching/exercise-suggestions`, {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    muscle_group: muscleGroup,\n                    current_exercise: currentExercise,\n                    context: \"progressive_overload\"\n                })\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                return data.suggestions || [];\n            }\n        } catch (error) {\n            console.error(\"AI suggestions error:\", error);\n        }\n        \n        // Fallback to local database\n        return getLocalSuggestions(muscleGroup, currentExercise);\n    };\n\n    const getLocalSuggestions = (muscleGroup, currentExercise) => {\n        const exercises = exerciseDatabase[muscleGroup] || [];\n        return exercises\n            .filter(exercise => \n                exercise.toLowerCase() !== currentExercise.toLowerCase() &&\n                exercise.toLowerCase().includes(currentExercise.toLowerCase().split(' ')[0])\n            )\n            .slice(0, 5);\n    };\n\n    const fetchSuggestions = async () => {\n        if (!muscleGroup || muscleGroup.length < 2) {\n            setSuggestions([]);\n            return;\n        }\n\n        const aiSuggestions = await getAISuggestions(muscleGroup, currentExercise);\n        const localSuggestions = getLocalSuggestions(muscleGroup, currentExercise);\n        \n        // Combine and deduplicate suggestions\n        const combinedSuggestions = [...new Set([...aiSuggestions, ...localSuggestions])];\n        setSuggestions(combinedSuggestions.slice(0, 6));\n        setIsLoading(false);\n    };\n\n    useEffect(() => {\n        const timeoutId = setTimeout(() => {\n            fetchSuggestions();\n        }, 300); // Debounce suggestions\n\n        return () => clearTimeout(timeoutId);\n    }, [muscleGroup, currentExercise]);\n\n    const handleSuggestionClick = (suggestion) => {\n        onSuggestionSelect(suggestion);\n        setShowSuggestions(false);\n    };\n\n    const toggleSuggestions = () => {\n        setShowSuggestions(!showSuggestions);\n    };\n\n    if (!muscleGroup || (!isLoading && suggestions.length === 0)) {\n        return null;\n    }\n\n    return (\n        <div style={{ marginTop: \"0.5rem\" }}>\n            <button\n                onClick={toggleSuggestions}\n                style={{\n                    background: \"none\",\n                    border: \"none\",\n                    color: theme.accent,\n                    fontSize: \"0.8rem\",\n                    cursor: \"pointer\",\n                    padding: \"0.2rem 0\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"0.3rem\",\n                    transition: \"color 0.2s ease\"\n                }}\n                onMouseOver={e => e.currentTarget.style.color = theme.accentHover}\n                onMouseOut={e => e.currentTarget.style.color = theme.accent}\n            >\n                {isLoading ? (\n                    <>\n                        <InlineSpinner size=\"small\" />\n                        Getting suggestions...\n                    </>\n                ) : (\n                    <>\n                        💡 Smart Suggestions ({suggestions.length})\n                        <span style={{\n                            transform: showSuggestions ? \"rotate(180deg)\" : \"rotate(0deg)\",\n                            transition: \"transform 0.2s ease\"\n                        }}>\n                            ▼\n                        </span>\n                    </>\n                )}\n            </button>\n\n            {showSuggestions && suggestions.length > 0 && (\n                <div style={{\n                    marginTop: \"0.5rem\",\n                    background: theme.surfaceSecondary,\n                    border: `1px solid ${theme.border}`,\n                    borderRadius: \"8px\",\n                    padding: \"0.5rem\",\n                    maxHeight: \"150px\",\n                    overflowY: \"auto\"\n                }}>\n                    <div style={{\n                        fontSize: \"0.7rem\",\n                        color: theme.textMuted,\n                        marginBottom: \"0.5rem\",\n                        fontStyle: \"italic\"\n                    }}>\n                        AI-powered exercise suggestions for {muscleGroup}:\n                    </div>\n                    \n                    <div style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        gap: \"0.2rem\"\n                    }}>\n                        {suggestions.map((suggestion, index) => (\n                            <button\n                                key={index}\n                                onClick={() => handleSuggestionClick(suggestion)}\n                                style={{\n                                    background: \"none\",\n                                    border: \"none\",\n                                    color: theme.text,\n                                    fontSize: \"0.8rem\",\n                                    padding: \"0.3rem 0.5rem\",\n                                    textAlign: \"left\",\n                                    cursor: \"pointer\",\n                                    borderRadius: \"4px\",\n                                    transition: \"background 0.2s ease\"\n                                }}\n                                onMouseOver={e => e.currentTarget.style.background = theme.surfaceTertiary}\n                                onMouseOut={e => e.currentTarget.style.background = \"none\"}\n                            >\n                                {suggestion}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Weight and Rep Suggestions Component\nexport const ProgressionSuggestions = ({ currentSets, exercise, onSuggestionApply }) => {\n    const { theme } = useTheme();\n    const [suggestions, setSuggestions] = useState([]);\n    const [showSuggestions, setShowSuggestions] = useState(false);\n\n    useEffect(() => {\n        if (currentSets && currentSets.length > 0) {\n            generateProgressionSuggestions();\n        }\n    }, [currentSets, exercise]);\n\n    const generateProgressionSuggestions = () => {\n        const suggestions = [];\n        \n        if (currentSets.length > 0) {\n            const lastSet = currentSets[currentSets.length - 1];\n            const weight = parseFloat(lastSet.weight) || 0;\n            const reps = parseInt(lastSet.reps) || 0;\n\n            if (weight > 0 && reps > 0) {\n                // Progressive overload suggestions\n                suggestions.push({\n                    type: \"Weight Increase\",\n                    description: `Add 5 lbs: ${weight + 5} lbs x ${reps} reps`,\n                    sets: currentSets.map(set => ({\n                        ...set,\n                        weight: (parseFloat(set.weight) + 5).toString()\n                    }))\n                });\n\n                suggestions.push({\n                    type: \"Rep Increase\", \n                    description: `Add 2 reps: ${weight} lbs x ${reps + 2} reps`,\n                    sets: currentSets.map(set => ({\n                        ...set,\n                        reps: (parseInt(set.reps) + 2).toString()\n                    }))\n                });\n\n                if (reps >= 12) {\n                    suggestions.push({\n                        type: \"Weight + Rep Adjustment\",\n                        description: `${weight + 10} lbs x ${Math.max(6, reps - 3)} reps`,\n                        sets: currentSets.map(set => ({\n                            ...set,\n                            weight: (parseFloat(set.weight) + 10).toString(),\n                            reps: Math.max(6, parseInt(set.reps) - 3).toString()\n                        }))\n                    });\n                }\n            }\n        }\n\n        setSuggestions(suggestions);\n    };\n\n    const applySuggestion = (suggestion) => {\n        onSuggestionApply(suggestion.sets);\n        setShowSuggestions(false);\n    };\n\n    if (suggestions.length === 0) return null;\n\n    return (\n        <div style={{ marginTop: \"0.5rem\" }}>\n            <button\n                onClick={() => setShowSuggestions(!showSuggestions)}\n                style={{\n                    background: \"none\",\n                    border: \"none\",\n                    color: theme.accent,\n                    fontSize: \"0.8rem\",\n                    cursor: \"pointer\",\n                    padding: \"0.2rem 0\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: \"0.3rem\"\n                }}\n            >\n                📈 Progressive Overload Suggestions\n                <span style={{\n                    transform: showSuggestions ? \"rotate(180deg)\" : \"rotate(0deg)\",\n                    transition: \"transform 0.2s ease\"\n                }}>\n                    ▼\n                </span>\n            </button>\n\n            {showSuggestions && (\n                <div style={{\n                    marginTop: \"0.5rem\",\n                    background: theme.surfaceSecondary,\n                    border: `1px solid ${theme.border}`,\n                    borderRadius: \"8px\",\n                    padding: \"0.8rem\"\n                }}>\n                    {suggestions.map((suggestion, index) => (\n                        <div key={index} style={{\n                            marginBottom: index < suggestions.length - 1 ? \"0.8rem\" : 0\n                        }}>\n                            <div style={{\n                                fontWeight: \"600\",\n                                color: theme.text,\n                                fontSize: \"0.8rem\",\n                                marginBottom: \"0.2rem\"\n                            }}>\n                                {suggestion.type}\n                            </div>\n                            <div style={{\n                                color: theme.textSecondary,\n                                fontSize: \"0.7rem\",\n                                marginBottom: \"0.5rem\"\n                            }}>\n                                {suggestion.description}\n                            </div>\n                            <button\n                                onClick={() => applySuggestion(suggestion)}\n                                style={{\n                                    background: theme.accent,\n                                    color: theme.background,\n                                    border: \"none\",\n                                    borderRadius: \"4px\",\n                                    padding: \"0.3rem 0.8rem\",\n                                    fontSize: \"0.7rem\",\n                                    fontWeight: \"600\",\n                                    cursor: \"pointer\",\n                                    transition: \"background 0.2s ease\"\n                                }}\n                                onMouseOver={e => e.currentTarget.style.background = theme.accentHover}\n                                onMouseOut={e => e.currentTarget.style.background = theme.accent}\n                            >\n                                Apply\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SmartSuggestions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}