{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getTables}from'../../services/api';import'./DashboardStats.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DashboardStats=()=>{const[stats,setStats]=useState({totalWorkouts:0,thisWeek:0,currentStreak:0,totalExercises:0});const[isLoading,setIsLoading]=useState(true);useEffect(()=>{fetchStats();},[]);const fetchStats=async()=>{try{const tables=await getTables();const now=new Date();const oneWeekAgo=new Date(now.getTime()-7*24*60*60*1000);// Calculate stats\nconst totalWorkouts=tables.length;const thisWeek=tables.filter(table=>new Date(table.date)>=oneWeekAgo).length;const totalExercises=tables.reduce((acc,table)=>acc+table.rows.length,0);// Calculate streak (simplified - consecutive days with workouts)\nconst sortedDates=tables.map(table=>table.date).sort((a,b)=>new Date(b)-new Date(a));let currentStreak=0;if(sortedDates.length>0){const today=new Date().toISOString().split('T')[0];const yesterday=new Date(Date.now()-86400000).toISOString().split('T')[0];if(sortedDates.includes(today)||sortedDates.includes(yesterday)){currentStreak=1;// Simple streak calculation - can be enhanced\nfor(let i=1;i<sortedDates.length;i++){const current=new Date(sortedDates[i]);const previous=new Date(sortedDates[i-1]);const diffDays=(previous-current)/(1000*60*60*24);if(diffDays<=2){// Allow 1 day gap\ncurrentStreak++;}else{break;}}}}setStats({totalWorkouts,thisWeek,currentStreak,totalExercises});}catch(error){console.error('Error fetching stats:',error);}finally{setIsLoading(false);}};const statItems=[{label:'Total Workouts',value:stats.totalWorkouts,icon:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M22 12h-4l-3 9L9 3l-3 9H2\"})}),color:'var(--accent-primary)',trend:'+12%'},{label:'This Week',value:stats.thisWeek,icon:/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"rect\",{x:\"3\",y:\"4\",width:\"18\",height:\"18\",rx:\"2\",ry:\"2\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"16\",y1:\"2\",x2:\"16\",y2:\"6\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"8\",y1:\"2\",x2:\"8\",y2:\"6\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"3\",y1:\"10\",x2:\"21\",y2:\"10\"})]}),color:'var(--accent-success)',trend:'+25%'},{label:'Current Streak',value:stats.currentStreak,suffix:stats.currentStreak===1?'day':'days',icon:/*#__PURE__*/_jsx(\"svg\",{viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"})}),color:'var(--accent-warning)',trend:'ðŸ”¥'},{label:'Total Exercises',value:stats.totalExercises,icon:/*#__PURE__*/_jsxs(\"svg\",{viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M6.2 5h12l3 7H9.2l-3-7z\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M6 5V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v1\"})]}),color:'var(--accent-tertiary)',trend:'+8%'}];if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"stats-title\",children:\"Your Progress\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-pulse\",children:\"Loading...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"stats-grid\",children:[...Array(4)].map((_,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"stat-card loading\",children:/*#__PURE__*/_jsx(\"div\",{className:\"stat-skeleton\"})},i))})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"stats-title\",children:\"Your Progress\"}),/*#__PURE__*/_jsx(\"p\",{className:\"stats-subtitle\",children:\"Track your fitness journey\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"stats-grid\",children:statItems.map((stat,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",style:{'--delay':\"\".concat(index*0.1,\"s\")},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",style:{color:stat.color},children:stat.icon}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-trend\",children:stat.trend})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",children:[stat.value.toLocaleString(),stat.suffix&&/*#__PURE__*/_jsx(\"span\",{className:\"stat-suffix\",children:stat.suffix})]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:stat.label})]}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-glow\",style:{'--glow-color':stat.color}})]},stat.label))})]});};export default DashboardStats;","map":{"version":3,"names":["React","useState","useEffect","getTables","jsx","_jsx","jsxs","_jsxs","DashboardStats","stats","setStats","totalWorkouts","thisWeek","currentStreak","totalExercises","isLoading","setIsLoading","fetchStats","tables","now","Date","oneWeekAgo","getTime","length","filter","table","date","reduce","acc","rows","sortedDates","map","sort","a","b","today","toISOString","split","yesterday","includes","i","current","previous","diffDays","error","console","statItems","label","value","icon","viewBox","fill","stroke","strokeWidth","children","d","color","trend","x","y","width","height","rx","ry","x1","y1","x2","y2","suffix","className","Array","_","stat","index","style","concat","toLocaleString"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/Frontend/src/components/Dashboard/DashboardStats.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getTables } from '../../services/api';\r\nimport './DashboardStats.css';\r\n\r\nconst DashboardStats = () => {\r\n  const [stats, setStats] = useState({\r\n    totalWorkouts: 0,\r\n    thisWeek: 0,\r\n    currentStreak: 0,\r\n    totalExercises: 0\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchStats();\r\n  }, []);\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const tables = await getTables();\r\n      \r\n      const now = new Date();\r\n      const oneWeekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n      \r\n      // Calculate stats\r\n      const totalWorkouts = tables.length;\r\n      const thisWeek = tables.filter(table => \r\n        new Date(table.date) >= oneWeekAgo\r\n      ).length;\r\n      \r\n      const totalExercises = tables.reduce((acc, table) => \r\n        acc + table.rows.length, 0\r\n      );\r\n\r\n      // Calculate streak (simplified - consecutive days with workouts)\r\n      const sortedDates = tables\r\n        .map(table => table.date)\r\n        .sort((a, b) => new Date(b) - new Date(a));\r\n      \r\n      let currentStreak = 0;\r\n      if (sortedDates.length > 0) {\r\n        const today = new Date().toISOString().split('T')[0];\r\n        const yesterday = new Date(Date.now() - 86400000).toISOString().split('T')[0];\r\n        \r\n        if (sortedDates.includes(today) || sortedDates.includes(yesterday)) {\r\n          currentStreak = 1;\r\n          // Simple streak calculation - can be enhanced\r\n          for (let i = 1; i < sortedDates.length; i++) {\r\n            const current = new Date(sortedDates[i]);\r\n            const previous = new Date(sortedDates[i - 1]);\r\n            const diffDays = (previous - current) / (1000 * 60 * 60 * 24);\r\n            \r\n            if (diffDays <= 2) { // Allow 1 day gap\r\n              currentStreak++;\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      setStats({\r\n        totalWorkouts,\r\n        thisWeek,\r\n        currentStreak,\r\n        totalExercises\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching stats:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const statItems = [\r\n    {\r\n      label: 'Total Workouts',\r\n      value: stats.totalWorkouts,\r\n      icon: (\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n          <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\"/>\r\n        </svg>\r\n      ),\r\n      color: 'var(--accent-primary)',\r\n      trend: '+12%'\r\n    },\r\n    {\r\n      label: 'This Week',\r\n      value: stats.thisWeek,\r\n      icon: (\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n          <rect x=\"3\" y=\"4\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"/>\r\n          <line x1=\"16\" y1=\"2\" x2=\"16\" y2=\"6\"/>\r\n          <line x1=\"8\" y1=\"2\" x2=\"8\" y2=\"6\"/>\r\n          <line x1=\"3\" y1=\"10\" x2=\"21\" y2=\"10\"/>\r\n        </svg>\r\n      ),\r\n      color: 'var(--accent-success)',\r\n      trend: '+25%'\r\n    },\r\n    {\r\n      label: 'Current Streak',\r\n      value: stats.currentStreak,\r\n      suffix: stats.currentStreak === 1 ? 'day' : 'days',\r\n      icon: (\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n          <path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/>\r\n        </svg>\r\n      ),\r\n      color: 'var(--accent-warning)',\r\n      trend: 'ðŸ”¥'\r\n    },\r\n    {\r\n      label: 'Total Exercises',\r\n      value: stats.totalExercises,\r\n      icon: (\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n          <path d=\"M6.2 5h12l3 7H9.2l-3-7z\"/>\r\n          <path d=\"M6 5V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v1\"/>\r\n        </svg>\r\n      ),\r\n      color: 'var(--accent-tertiary)',\r\n      trend: '+8%'\r\n    }\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"dashboard-stats\">\r\n        <div className=\"stats-header\">\r\n          <h2 className=\"stats-title\">Your Progress</h2>\r\n          <div className=\"loading-pulse\">Loading...</div>\r\n        </div>\r\n        <div className=\"stats-grid\">\r\n          {[...Array(4)].map((_, i) => (\r\n            <div key={i} className=\"stat-card loading\">\r\n              <div className=\"stat-skeleton\"></div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-stats\">\r\n      <div className=\"stats-header\">\r\n        <h2 className=\"stats-title\">Your Progress</h2>\r\n        <p className=\"stats-subtitle\">Track your fitness journey</p>\r\n      </div>\r\n      \r\n      <div className=\"stats-grid\">\r\n        {statItems.map((stat, index) => (\r\n          <div \r\n            key={stat.label}\r\n            className=\"stat-card\"\r\n            style={{ '--delay': `${index * 0.1}s` }}\r\n          >\r\n            <div className=\"stat-header\">\r\n              <div className=\"stat-icon\" style={{ color: stat.color }}>\r\n                {stat.icon}\r\n              </div>\r\n              <div className=\"stat-trend\">{stat.trend}</div>\r\n            </div>\r\n            \r\n            <div className=\"stat-content\">\r\n              <div className=\"stat-value\">\r\n                {stat.value.toLocaleString()}\r\n                {stat.suffix && <span className=\"stat-suffix\">{stat.suffix}</span>}\r\n              </div>\r\n              <div className=\"stat-label\">{stat.label}</div>\r\n            </div>\r\n            \r\n            {/* Animated background effect */}\r\n            <div \r\n              className=\"stat-glow\"\r\n              style={{ '--glow-color': stat.color }}\r\n            ></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardStats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}