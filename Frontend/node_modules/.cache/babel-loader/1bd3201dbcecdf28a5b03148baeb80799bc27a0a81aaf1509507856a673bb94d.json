{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidus\\\\OneDrive\\\\Documentos\\\\Summer2025\\\\fitness-tracker-frontend\\\\src\\\\components\\\\TrainingLogTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport TrainingLogRow from \"./TrainingLogRow\";\nimport TrainingLogManager from \"./TrainingLogManager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst manager = new TrainingLogManager();\nexport default function TrainingLogTable() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [log, setLog] = useState(null);\n  useEffect(() => {\n    const loadLog = async () => {\n      const saved = await manager.loadTable(id);\n      if (saved) {\n        setLog(saved);\n      } else {\n        const today = new Date().toISOString().split(\"T\")[0];\n        const defaultRow = {\n          id: 0,\n          muscleGroup: \"\",\n          exercise: \"\",\n          sets: [{\n            reps: \"\",\n            weight: \"\"\n          }, {\n            reps: \"\",\n            weight: \"\"\n          }],\n          notes: \"\",\n          showNotes: false,\n          weightUnit: \"lbs\"\n        };\n        const defaultLog = {\n          id: id,\n          tableName: `New Table - ${today}`,\n          date: today,\n          rows: [defaultRow]\n        };\n        setLog(defaultLog);\n      }\n    };\n    loadLog();\n  }, [id]);\n  const updateRow = (index, updatedRow) => {\n    const newRows = [...log.rows];\n    newRows[index] = {\n      ...newRows[index],\n      ...updatedRow\n    };\n    setLog({\n      ...log,\n      rows: newRows\n    });\n  };\n  const addRow = () => {\n    const newRow = {\n      id: log.rows.length,\n      muscleGroup: \"\",\n      exercise: \"\",\n      sets: [{\n        reps: \"\",\n        weight: \"\"\n      }],\n      notes: \"\",\n      showNotes: false,\n      weightUnit: \"lbs\"\n    };\n    setLog({\n      ...log,\n      rows: [...log.rows, newRow]\n    });\n  };\n  const deleteLastRow = () => {\n    if (log.rows.length <= 1) return;\n    const newRows = log.rows.slice(0, -1);\n    setLog({\n      ...log,\n      rows: newRows\n    });\n  };\n  const handleRename = e => {\n    const updated = {\n      ...log,\n      tableName: e.target.value\n    };\n    setLog(updated);\n  };\n  const handleRenameSave = () => {\n    manager.saveTable(log);\n  };\n  if (!log) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      color: \"#f5f6fa\",\n      background: \"#000\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      style: {\n        marginBottom: \"1rem\",\n        background: \"#31363f\",\n        color: \"#ffd966\",\n        padding: \"0.5rem 1rem\",\n        border: \"none\",\n        borderRadius: \"8px\",\n        cursor: \"pointer\"\n      },\n      children: \"\\u2190 Back to Saved Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: log.tableName,\n      onChange: handleRename,\n      onBlur: handleRenameSave,\n      style: {\n        fontSize: \"1.5rem\",\n        fontWeight: \"bold\",\n        background: \"transparent\",\n        border: \"none\",\n        borderBottom: \"1px solid #666\",\n        color: \"#ffd966\",\n        marginBottom: \"1rem\",\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: log.date,\n      onChange: e => setLog({\n        ...log,\n        date: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), log.rows.map((row, index) => /*#__PURE__*/_jsxDEV(TrainingLogRow, {\n      rowData: row,\n      onUpdate: updated => updateRow(index, updated)\n    }, row.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      children: \"+ Add Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteLastRow,\n      disabled: log.rows.length <= 1,\n      children: \"- Delete Last\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(TrainingLogTable, \"ZqBPUu2crkQxaHzp/r6Lw6bwRpE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TrainingLogTable;\nvar _c;\n$RefreshReg$(_c, \"TrainingLogTable\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","TrainingLogRow","TrainingLogManager","jsxDEV","_jsxDEV","manager","TrainingLogTable","_s","id","navigate","log","setLog","loadLog","saved","loadTable","today","Date","toISOString","split","defaultRow","muscleGroup","exercise","sets","reps","weight","notes","showNotes","weightUnit","defaultLog","tableName","date","rows","updateRow","index","updatedRow","newRows","addRow","newRow","length","deleteLastRow","slice","handleRename","e","updated","target","value","handleRenameSave","saveTable","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","color","background","minHeight","onClick","marginBottom","border","borderRadius","cursor","type","onChange","onBlur","fontSize","fontWeight","borderBottom","width","map","row","rowData","onUpdate","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/components/TrainingLogTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport TrainingLogRow from \"./TrainingLogRow\";\r\nimport TrainingLogManager from \"./TrainingLogManager\";\r\n\r\nconst manager = new TrainingLogManager();\r\n\r\nexport default function TrainingLogTable() {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [log, setLog] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadLog = async () => {\r\n            const saved = await manager.loadTable(id);\r\n            if (saved) {\r\n                setLog(saved);\r\n            } else {\r\n                const today = new Date().toISOString().split(\"T\")[0];\r\n                const defaultRow = {\r\n                    id: 0,\r\n                    muscleGroup: \"\",\r\n                    exercise: \"\",\r\n                    sets: [\r\n                        { reps: \"\", weight: \"\" },\r\n                        { reps: \"\", weight: \"\" }\r\n                    ],\r\n                    notes: \"\",\r\n                    showNotes: false,\r\n                    weightUnit: \"lbs\"\r\n                };\r\n                const defaultLog = {\r\n                    id: id,\r\n                    tableName: `New Table - ${today}`,\r\n                    date: today,\r\n                    rows: [defaultRow]\r\n                };\r\n                setLog(defaultLog);\r\n            }\r\n        };\r\n\r\n        loadLog();\r\n    }, [id]);\r\n\r\n    const updateRow = (index, updatedRow) => {\r\n        const newRows = [...log.rows];\r\n        newRows[index] = { ...newRows[index], ...updatedRow };\r\n        setLog({ ...log, rows: newRows });\r\n    };\r\n\r\n    const addRow = () => {\r\n        const newRow = {\r\n            id: log.rows.length,\r\n            muscleGroup: \"\",\r\n            exercise: \"\",\r\n            sets: [{ reps: \"\", weight: \"\" }],\r\n            notes: \"\",\r\n            showNotes: false,\r\n            weightUnit: \"lbs\"\r\n        };\r\n        setLog({ ...log, rows: [...log.rows, newRow] });\r\n    };\r\n\r\n    const deleteLastRow = () => {\r\n        if (log.rows.length <= 1) return;\r\n        const newRows = log.rows.slice(0, -1);\r\n        setLog({ ...log, rows: newRows });\r\n    };\r\n\r\n    const handleRename = (e) => {\r\n        const updated = { ...log, tableName: e.target.value };\r\n        setLog(updated);\r\n    };\r\n\r\n    const handleRenameSave = () => {\r\n        manager.saveTable(log);\r\n    };\r\n\r\n    if (!log) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div style={{ padding: \"2rem\", color: \"#f5f6fa\", background: \"#000\", minHeight: \"100vh\" }}>\r\n            <button\r\n                onClick={() => navigate(\"/\")}\r\n                style={{ marginBottom: \"1rem\", background: \"#31363f\", color: \"#ffd966\", padding: \"0.5rem 1rem\", border: \"none\", borderRadius: \"8px\", cursor: \"pointer\" }}\r\n            >\r\n                ‚Üê Back to Saved Tables\r\n            </button>\r\n\r\n            <input\r\n                type=\"text\"\r\n                value={log.tableName}\r\n                onChange={handleRename}\r\n                onBlur={handleRenameSave}\r\n                style={{\r\n                    fontSize: \"1.5rem\",\r\n                    fontWeight: \"bold\",\r\n                    background: \"transparent\",\r\n                    border: \"none\",\r\n                    borderBottom: \"1px solid #666\",\r\n                    color: \"#ffd966\",\r\n                    marginBottom: \"1rem\",\r\n                    width: \"100%\"\r\n                }}\r\n            />\r\n\r\n            <input\r\n                type=\"date\"\r\n                value={log.date}\r\n                onChange={(e) => setLog({ ...log, date: e.target.value })}\r\n            />\r\n            <hr />\r\n\r\n            {log.rows.map((row, index) => (\r\n                <TrainingLogRow\r\n                    key={row.id}\r\n                    rowData={row}\r\n                    onUpdate={(updated) => updateRow(index, updated)}\r\n                />\r\n            ))}\r\n\r\n            <button onClick={addRow}>+ Add Exercise</button>\r\n            <button onClick={deleteLastRow} disabled={log.rows.length <= 1}>\r\n                - Delete Last\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}