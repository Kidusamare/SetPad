{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidus\\\\OneDrive\\\\Documentos\\\\Summer2025\\\\fitness-tracker-frontend\\\\src\\\\pages\\\\ImportDataPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useTheme } from \"../context/ThemeContext\";\n\n// Simplified API call to upload the file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function importDataAPI(file) {\n  const formData = new FormData();\n  formData.append(\"file\", file);\n  try {\n    const res = await fetch(\"http://localhost:8000/import-data\", {\n      method: \"POST\",\n      body: formData\n    });\n    if (!res.ok) {\n      const errorData = await res.json();\n      return {\n        success: false,\n        message: errorData.detail || \"Import failed.\"\n      };\n    }\n    const data = await res.json();\n    return {\n      success: true,\n      message: data.message || \"Import successful!\",\n      tables: data.tables || []\n    };\n  } catch (err) {\n    return {\n      success: false,\n      message: \"Network error. Make sure the backend server is running.\"\n    };\n  }\n}\nconst ImportDataPage = () => {\n  _s();\n  const {\n    theme\n  } = useTheme();\n  const navigate = useNavigate();\n  const [file, setFile] = useState(null);\n  const [status, setStatus] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [importedTables, setImportedTables] = useState([]);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setStatus(\"\");\n    setImportedTables([]);\n  };\n  const handleImport = async () => {\n    if (!file) {\n      setStatus(\"Please select a file.\");\n      return;\n    }\n    setIsLoading(true);\n    setStatus(\"Processing with AI...\");\n    try {\n      const result = await importDataAPI(file);\n      if (result.success) {\n        setStatus(result.message);\n        setImportedTables(result.tables || []);\n      } else {\n        setStatus(`Error: ${result.message}`);\n      }\n    } catch (err) {\n      setStatus(\"Error importing file.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleViewTable = tableId => {\n    navigate(`/log/${tableId}`);\n  };\n  const handleGoBack = () => {\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.background,\n      minHeight: \"100vh\",\n      color: theme.text,\n      padding: \"2rem\",\n      paddingTop: \"5rem\",\n      transition: \"background-color 0.3s, color 0.3s\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: theme.accent,\n        marginBottom: \"2rem\"\n      },\n      children: \"Import Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: theme.cardBackground,\n        borderRadius: \"16px\",\n        padding: \"2rem\",\n        maxWidth: \"400px\",\n        margin: \"0 auto\",\n        boxShadow: theme.shadowLight,\n        border: `1px solid ${theme.cardBorder}`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: 600,\n          color: theme.textSecondary\n        },\n        children: \"Select a file to import (CSV, TXT, Excel):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv,.txt,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\",\n        onChange: handleFileChange,\n        style: {\n          display: \"block\",\n          margin: \"1rem 0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleImport,\n        style: {\n          background: theme.accent,\n          color: theme.background,\n          border: \"none\",\n          borderRadius: \"8px\",\n          padding: \"0.8rem 1.5rem\",\n          fontWeight: 600,\n          fontSize: \"1rem\",\n          cursor: \"pointer\",\n          marginTop: \"1rem\"\n        },\n        children: \"Import\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          color: theme.textSecondary\n        },\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportDataPage, \"+TW8i//a5q9Nh1qBBdQGB5A5k3k=\", false, function () {\n  return [useTheme, useNavigate];\n});\n_c = ImportDataPage;\nexport default ImportDataPage;\nvar _c;\n$RefreshReg$(_c, \"ImportDataPage\");","map":{"version":3,"names":["React","useState","useNavigate","useTheme","jsxDEV","_jsxDEV","importDataAPI","file","formData","FormData","append","res","fetch","method","body","ok","errorData","json","success","message","detail","data","tables","err","ImportDataPage","_s","theme","navigate","setFile","status","setStatus","isLoading","setIsLoading","importedTables","setImportedTables","handleFileChange","e","target","files","handleImport","result","handleViewTable","tableId","handleGoBack","style","background","minHeight","color","text","padding","paddingTop","transition","children","accent","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","cardBackground","borderRadius","maxWidth","margin","boxShadow","shadowLight","border","cardBorder","fontWeight","textSecondary","type","accept","onChange","display","onClick","fontSize","cursor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/kidus/OneDrive/Documentos/Summer2025/fitness-tracker-frontend/src/pages/ImportDataPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTheme } from \"../context/ThemeContext\";\r\n\r\n// Simplified API call to upload the file\r\nasync function importDataAPI(file) {\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n  try {\r\n    const res = await fetch(\"http://localhost:8000/import-data\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    if (!res.ok) {\r\n      const errorData = await res.json();\r\n      return { \r\n        success: false, \r\n        message: errorData.detail || \"Import failed.\" \r\n      };\r\n    }\r\n    const data = await res.json();\r\n    return { \r\n      success: true, \r\n      message: data.message || \"Import successful!\",\r\n      tables: data.tables || []\r\n    };\r\n  } catch (err) {\r\n    return { \r\n      success: false, \r\n      message: \"Network error. Make sure the backend server is running.\" \r\n    };\r\n  }\r\n}\r\n\r\nconst ImportDataPage = () => {\r\n  const { theme } = useTheme();\r\n  const navigate = useNavigate();\r\n  const [file, setFile] = useState(null);\r\n  const [status, setStatus] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [importedTables, setImportedTables] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setStatus(\"\");\r\n    setImportedTables([]);\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    if (!file) {\r\n      setStatus(\"Please select a file.\");\r\n      return;\r\n    }\r\n    \r\n    setIsLoading(true);\r\n    setStatus(\"Processing with AI...\");\r\n    \r\n    try {\r\n      const result = await importDataAPI(file);\r\n      if (result.success) {\r\n        setStatus(result.message);\r\n        setImportedTables(result.tables || []);\r\n      } else {\r\n        setStatus(`Error: ${result.message}`);\r\n      }\r\n    } catch (err) {\r\n      setStatus(\"Error importing file.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleViewTable = (tableId) => {\r\n    navigate(`/log/${tableId}`);\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      background: theme.background,\r\n      minHeight: \"100vh\",\r\n      color: theme.text,\r\n      padding: \"2rem\",\r\n      paddingTop: \"5rem\",\r\n      transition: \"background-color 0.3s, color 0.3s\"\r\n    }}>\r\n      <h1 style={{ color: theme.accent, marginBottom: \"2rem\" }}>Import Data</h1>\r\n      <div style={{\r\n        background: theme.cardBackground,\r\n        borderRadius: \"16px\",\r\n        padding: \"2rem\",\r\n        maxWidth: \"400px\",\r\n        margin: \"0 auto\",\r\n        boxShadow: theme.shadowLight,\r\n        border: `1px solid ${theme.cardBorder}`\r\n      }}>\r\n        <label style={{ fontWeight: 600, color: theme.textSecondary }}>\r\n          Select a file to import (CSV, TXT, Excel):\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".csv,.txt,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\"\r\n          onChange={handleFileChange}\r\n          style={{ display: \"block\", margin: \"1rem 0\" }}\r\n        />\r\n        <button\r\n          onClick={handleImport}\r\n          style={{\r\n            background: theme.accent,\r\n            color: theme.background,\r\n            border: \"none\",\r\n            borderRadius: \"8px\",\r\n            padding: \"0.8rem 1.5rem\",\r\n            fontWeight: 600,\r\n            fontSize: \"1rem\",\r\n            cursor: \"pointer\",\r\n            marginTop: \"1rem\"\r\n          }}\r\n        >\r\n          Import\r\n        </button>\r\n        {status && (\r\n          <div style={{ marginTop: \"1rem\", color: theme.textSecondary }}>{status}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImportDataPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}